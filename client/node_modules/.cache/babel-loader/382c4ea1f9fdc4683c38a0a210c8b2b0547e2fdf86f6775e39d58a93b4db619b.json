{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar graphql_1 = require(\"graphql\");\nvar linkToFetcher_1 = require(\"./linkToFetcher\");\nvar isEmptyObject_1 = require(\"../isEmptyObject\");\nvar makeExecutableSchema_1 = require(\"../makeExecutableSchema\");\nvar schemaRecreation_1 = require(\"./schemaRecreation\");\nvar resolveFromParentTypename_1 = require(\"./resolveFromParentTypename\");\nvar defaultMergedResolver_1 = require(\"./defaultMergedResolver\");\nvar errors_1 = require(\"./errors\");\nvar observableToAsyncIterable_1 = require(\"./observableToAsyncIterable\");\nfunction makeRemoteExecutableSchema(_a) {\n  var _b;\n  var schema = _a.schema,\n    link = _a.link,\n    fetcher = _a.fetcher,\n    _c = _a.createResolver,\n    customCreateResolver = _c === void 0 ? createResolver : _c,\n    buildSchemaOptions = _a.buildSchemaOptions,\n    _d = _a.printSchemaOptions,\n    printSchemaOptions = _d === void 0 ? {\n      commentDescriptions: true\n    } : _d;\n  if (!fetcher && link) {\n    fetcher = linkToFetcher_1.default(link);\n  }\n  var typeDefs;\n  if (typeof schema === 'string') {\n    typeDefs = schema;\n    schema = graphql_1.buildSchema(typeDefs, buildSchemaOptions);\n  } else {\n    typeDefs = graphql_1.printSchema(schema, printSchemaOptions);\n  }\n  // prepare query resolvers\n  var queryResolvers = {};\n  var queryType = schema.getQueryType();\n  var queries = queryType.getFields();\n  Object.keys(queries).forEach(function (key) {\n    queryResolvers[key] = customCreateResolver(fetcher);\n  });\n  // prepare mutation resolvers\n  var mutationResolvers = {};\n  var mutationType = schema.getMutationType();\n  if (mutationType) {\n    var mutations = mutationType.getFields();\n    Object.keys(mutations).forEach(function (key) {\n      mutationResolvers[key] = customCreateResolver(fetcher);\n    });\n  }\n  // prepare subscription resolvers\n  var subscriptionResolvers = {};\n  var subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType) {\n    var subscriptions = subscriptionType.getFields();\n    Object.keys(subscriptions).forEach(function (key) {\n      subscriptionResolvers[key] = {\n        subscribe: createSubscriptionResolver(key, link)\n      };\n    });\n  }\n  // merge resolvers into resolver map\n  var resolvers = (_b = {}, _b[queryType.name] = queryResolvers, _b);\n  if (!isEmptyObject_1.default(mutationResolvers)) {\n    resolvers[mutationType.name] = mutationResolvers;\n  }\n  if (!isEmptyObject_1.default(subscriptionResolvers)) {\n    resolvers[subscriptionType.name] = subscriptionResolvers;\n  }\n  // add missing abstract resolvers (scalar, unions, interfaces)\n  var typeMap = schema.getTypeMap();\n  var types = Object.keys(typeMap).map(function (name) {\n    return typeMap[name];\n  });\n  var _loop_1 = function (type) {\n    if (type instanceof graphql_1.GraphQLInterfaceType || type instanceof graphql_1.GraphQLUnionType) {\n      resolvers[type.name] = {\n        __resolveType: function (parent, context, info) {\n          return resolveFromParentTypename_1.default(parent, info.schema);\n        }\n      };\n    } else if (type instanceof graphql_1.GraphQLScalarType) {\n      if (!(type === graphql_1.GraphQLID || type === graphql_1.GraphQLString || type === graphql_1.GraphQLFloat || type === graphql_1.GraphQLBoolean || type === graphql_1.GraphQLInt)) {\n        resolvers[type.name] = schemaRecreation_1.recreateType(type, function (name) {\n          return null;\n        }, false);\n      }\n    } else if (type instanceof graphql_1.GraphQLObjectType && type.name.slice(0, 2) !== '__' && type !== queryType && type !== mutationType && type !== subscriptionType) {\n      var resolver_1 = {};\n      Object.keys(type.getFields()).forEach(function (field) {\n        resolver_1[field] = defaultMergedResolver_1.default;\n      });\n      resolvers[type.name] = resolver_1;\n    }\n  };\n  for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n    var type = types_1[_i];\n    _loop_1(type);\n  }\n  return makeExecutableSchema_1.makeExecutableSchema({\n    typeDefs: typeDefs,\n    resolvers: resolvers\n  });\n}\nexports.default = makeRemoteExecutableSchema;\nfunction createResolver(fetcher) {\n  var _this = this;\n  return function (root, args, context, info) {\n    return __awaiter(_this, void 0, void 0, function () {\n      var fragments, document, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            fragments = Object.keys(info.fragments).map(function (fragment) {\n              return info.fragments[fragment];\n            });\n            document = {\n              kind: graphql_1.Kind.DOCUMENT,\n              definitions: __spreadArrays([info.operation], fragments)\n            };\n            return [4 /*yield*/, fetcher({\n              query: document,\n              variables: info.variableValues,\n              context: {\n                graphqlContext: context\n              }\n            })];\n          case 1:\n            result = _a.sent();\n            return [2 /*return*/, errors_1.checkResultAndHandleErrors(result, info)];\n        }\n      });\n    });\n  };\n}\nexports.createResolver = createResolver;\nfunction createSubscriptionResolver(name, link) {\n  return function (root, args, context, info) {\n    var fragments = Object.keys(info.fragments).map(function (fragment) {\n      return info.fragments[fragment];\n    });\n    var document = {\n      kind: graphql_1.Kind.DOCUMENT,\n      definitions: __spreadArrays([info.operation], fragments)\n    };\n    var operation = {\n      query: document,\n      variables: info.variableValues,\n      context: {\n        graphqlContext: context\n      }\n    };\n    var observable = linkToFetcher_1.execute(link, operation);\n    return observableToAsyncIterable_1.observableToAsyncIterable(observable);\n  };\n}","map":{"version":3,"names":["graphql_1","require","linkToFetcher_1","isEmptyObject_1","makeExecutableSchema_1","schemaRecreation_1","resolveFromParentTypename_1","defaultMergedResolver_1","errors_1","observableToAsyncIterable_1","makeRemoteExecutableSchema","_a","schema","link","fetcher","_c","createResolver","customCreateResolver","buildSchemaOptions","_d","printSchemaOptions","commentDescriptions","default","typeDefs","buildSchema","printSchema","queryResolvers","queryType","getQueryType","queries","getFields","Object","keys","forEach","key","mutationResolvers","mutationType","getMutationType","mutations","subscriptionResolvers","subscriptionType","getSubscriptionType","subscriptions","subscribe","createSubscriptionResolver","resolvers","_b","name","typeMap","getTypeMap","types","map","type","GraphQLInterfaceType","GraphQLUnionType","__resolveType","parent","context","info","GraphQLScalarType","GraphQLID","GraphQLString","GraphQLFloat","GraphQLBoolean","GraphQLInt","recreateType","GraphQLObjectType","slice","resolver_1","field","_i","types_1","length","makeExecutableSchema","exports","_this","root","args","__awaiter","fragments","fragment","document","kind","Kind","DOCUMENT","definitions","__spreadArrays","operation","query","variables","variableValues","graphqlContext","result","sent","checkResultAndHandleErrors","observable","execute","observableToAsyncIterable"],"sources":["../../src/stitching/makeRemoteExecutableSchema.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAAA,SAAA,GAAAC,OAAA;AAoBA,IAAAC,eAAA,GAAAD,OAAA;AACA,IAAAE,eAAA,GAAAF,OAAA;AAEA,IAAAG,sBAAA,GAAAH,OAAA;AACA,IAAAI,kBAAA,GAAAJ,OAAA;AACA,IAAAK,2BAAA,GAAAL,OAAA;AACA,IAAAM,uBAAA,GAAAN,OAAA;AACA,IAAAO,QAAA,GAAAP,OAAA;AACA,IAAAQ,2BAAA,GAAAR,OAAA;AAuCA,SAAwBS,0BAA0BA,CAACC,EAclD;;MAbCC,MAAA,GAAAD,EAAA,CAAAC,MAAM;IACNC,IAAA,GAAAF,EAAA,CAAAE,IAAI;IACJC,OAAA,GAAAH,EAAA,CAAAG,OAAO;IACPC,EAAA,GAAAJ,EAAA,CAAAK,cAAqD;IAArDC,oBAAA,GAAAF,EAAA,cAAAC,cAAA,GAAAD,EAAqD;IACrDG,kBAAA,GAAAP,EAAA,CAAAO,kBAAkB;IAClBC,EAAA,GAAAR,EAAA,CAAAS,kBAAkD;IAAlDA,kBAAA,GAAAD,EAAA;MAAAE,mBAAA;IAAA,IAAAF,EAAkD;EASlD,IAAI,CAACL,OAAO,IAAID,IAAI,EAAE;IACpBC,OAAO,GAAGZ,eAAA,CAAAoB,OAAa,CAACT,IAAI,CAAC;;EAG/B,IAAIU,QAAgB;EAEpB,IAAI,OAAOX,MAAM,KAAK,QAAQ,EAAE;IAC9BW,QAAQ,GAAGX,MAAM;IACjBA,MAAM,GAAGZ,SAAA,CAAAwB,WAAW,CAACD,QAAQ,EAAEL,kBAAkB,CAAC;GACnD,MAAM;IACLK,QAAQ,GAAGvB,SAAA,CAAAyB,WAAW,CAACb,MAAM,EAAEQ,kBAAkB,CAAC;;EAGpD;EACA,IAAMM,cAAc,GAAoB,EAAE;EAC1C,IAAMC,SAAS,GAAGf,MAAM,CAACgB,YAAY,EAAE;EACvC,IAAMC,OAAO,GAAGF,SAAS,CAACG,SAAS,EAAE;EACrCC,MAAM,CAACC,IAAI,CAACH,OAAO,CAAC,CAACI,OAAO,CAAC,UAAAC,GAAG;IAC9BR,cAAc,CAACQ,GAAG,CAAC,GAAGjB,oBAAoB,CAACH,OAAO,CAAC;EACrD,CAAC,CAAC;EAEF;EACA,IAAMqB,iBAAiB,GAAoB,EAAE;EAC7C,IAAMC,YAAY,GAAGxB,MAAM,CAACyB,eAAe,EAAE;EAC7C,IAAID,YAAY,EAAE;IAChB,IAAME,SAAS,GAAGF,YAAY,CAACN,SAAS,EAAE;IAC1CC,MAAM,CAACC,IAAI,CAACM,SAAS,CAAC,CAACL,OAAO,CAAC,UAAAC,GAAG;MAChCC,iBAAiB,CAACD,GAAG,CAAC,GAAGjB,oBAAoB,CAACH,OAAO,CAAC;IACxD,CAAC,CAAC;;EAGJ;EACA,IAAMyB,qBAAqB,GAAoB,EAAE;EACjD,IAAMC,gBAAgB,GAAG5B,MAAM,CAAC6B,mBAAmB,EAAE;EACrD,IAAID,gBAAgB,EAAE;IACpB,IAAME,aAAa,GAAGF,gBAAgB,CAACV,SAAS,EAAE;IAClDC,MAAM,CAACC,IAAI,CAACU,aAAa,CAAC,CAACT,OAAO,CAAC,UAAAC,GAAG;MACpCK,qBAAqB,CAACL,GAAG,CAAC,GAAG;QAC3BS,SAAS,EAAEC,0BAA0B,CAACV,GAAG,EAAErB,IAAI;OAChD;IACH,CAAC,CAAC;;EAGJ;EACA,IAAMgC,SAAS,IAAAC,EAAA,OAAiBA,EAAA,CAACnB,SAAS,CAACoB,IAAI,IAAGrB,cAAc,EAAAoB,EAAA,CAAE;EAElE,IAAI,CAAC3C,eAAA,CAAAmB,OAAa,CAACa,iBAAiB,CAAC,EAAE;IACrCU,SAAS,CAACT,YAAY,CAACW,IAAI,CAAC,GAAGZ,iBAAiB;;EAGlD,IAAI,CAAChC,eAAA,CAAAmB,OAAa,CAACiB,qBAAqB,CAAC,EAAE;IACzCM,SAAS,CAACL,gBAAgB,CAACO,IAAI,CAAC,GAAGR,qBAAqB;;EAG1D;EACA,IAAMS,OAAO,GAAGpC,MAAM,CAACqC,UAAU,EAAE;EACnC,IAAMC,KAAK,GAAGnB,MAAM,CAACC,IAAI,CAACgB,OAAO,CAAC,CAACG,GAAG,CAAC,UAAAJ,IAAI;IAAI,OAAAC,OAAO,CAACD,IAAI,CAAC;EAAb,CAAa,CAAC;0BAClDK,IAAI;IACb,IAAIA,IAAI,YAAYpD,SAAA,CAAAqD,oBAAoB,IAAID,IAAI,YAAYpD,SAAA,CAAAsD,gBAAgB,EAAE;MAC5ET,SAAS,CAACO,IAAI,CAACL,IAAI,CAAC,GAAG;QACrBQ,aAAa,EAAb,SAAAA,CAAcC,MAAW,EAAEC,OAAY,EAAEC,IAAS;UAChD,OAAOpD,2BAAA,CAAAgB,OAAyB,CAACkC,MAAM,EAAEE,IAAI,CAAC9C,MAAM,CAAC;QACvD;OACD;KACF,MAAM,IAAIwC,IAAI,YAAYpD,SAAA,CAAA2D,iBAAiB,EAAE;MAC5C,IACE,EACEP,IAAI,KAAKpD,SAAA,CAAA4D,SAAS,IAClBR,IAAI,KAAKpD,SAAA,CAAA6D,aAAa,IACtBT,IAAI,KAAKpD,SAAA,CAAA8D,YAAY,IACrBV,IAAI,KAAKpD,SAAA,CAAA+D,cAAc,IACvBX,IAAI,KAAKpD,SAAA,CAAAgE,UAAU,CACpB,EACD;QACAnB,SAAS,CAACO,IAAI,CAACL,IAAI,CAAC,GAAG1C,kBAAA,CAAA4D,YAAY,CAACb,IAAI,EAAE,UAACL,IAAY;UAAK,WAAI;QAAJ,CAAI,EAAE,KAAK,CAAsB;;KAEhG,MAAM,IACLK,IAAI,YAAYpD,SAAA,CAAAkE,iBAAiB,IACjCd,IAAI,CAACL,IAAI,CAACoB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,IAC9Bf,IAAI,KAAKzB,SAAS,IAClByB,IAAI,KAAKhB,YAAY,IACrBgB,IAAI,KAAKZ,gBAAgB,EACzB;MACA,IAAM4B,UAAQ,GAAG,EAAE;MACnBrC,MAAM,CAACC,IAAI,CAACoB,IAAI,CAACtB,SAAS,EAAE,CAAC,CAACG,OAAO,CAAC,UAAAoC,KAAK;QACzCD,UAAQ,CAACC,KAAK,CAAC,GAAG9D,uBAAA,CAAAe,OAAqB;MACzC,CAAC,CAAC;MACFuB,SAAS,CAACO,IAAI,CAACL,IAAI,CAAC,GAAGqB,UAAQ;;;EA9BnC,KAAmB,IAAAE,EAAA,IAAK,EAALC,OAAA,GAAArB,KAAK,EAALoB,EAAA,GAAAC,OAAA,CAAAC,MAAK,EAALF,EAAA,EAAK;IAAnB,IAAMlB,IAAI,GAAAmB,OAAA,CAAAD,EAAA;YAAJlB,IAAI;;EAkCf,OAAOhD,sBAAA,CAAAqE,oBAAoB,CAAC;IAC1BlD,QAAQ,EAAAA,QAAA;IACRsB,SAAS,EAAAA;GACV,CAAC;AACJ;AA9GA6B,OAAA,CAAApD,OAAA,GAAAZ,0BAAA;AAgHA,SAAgBM,cAAcA,CAACF,OAAgB;EAA/C,IAAA6D,KAAA;EACE,OAAO,UAAOC,IAAI,EAAEC,IAAI,EAAEpB,OAAO,EAAEC,IAAI;IAAA,OAAAoB,SAAA,CAAAH,KAAA;;;;;YAC/BI,SAAS,GAAGhD,MAAM,CAACC,IAAI,CAAC0B,IAAI,CAACqB,SAAS,CAAC,CAAC5B,GAAG,CAAC,UAAA6B,QAAQ;cAAI,OAAAtB,IAAI,CAACqB,SAAS,CAACC,QAAQ,CAAC;YAAxB,CAAwB,CAAC;YACjFC,QAAQ,GAAG;cACfC,IAAI,EAAElF,SAAA,CAAAmF,IAAI,CAACC,QAAQ;cACnBC,WAAW,EAAAC,cAAA,EAAG5B,IAAI,CAAC6B,SAAS,GAAKR,SAAS;aAC3C;YACc,qBAAMjE,OAAO,CAAC;cAC3B0E,KAAK,EAAEP,QAAQ;cACfQ,SAAS,EAAE/B,IAAI,CAACgC,cAAc;cAC9BjC,OAAO,EAAE;gBAAEkC,cAAc,EAAElC;cAAO;aACnC,CAAC;;YAJImC,MAAM,GAAGjF,EAAA,CAAAkF,IAAA,EAIb;YACF,sBAAOrF,QAAA,CAAAsF,0BAA0B,CAACF,MAAM,EAAElC,IAAI,CAAC;QAAC;;;GACjD;AACH;AAdAgB,OAAA,CAAA1D,cAAA,GAAAA,cAAA;AAgBA,SAAS4B,0BAA0BA,CAACG,IAAY,EAAElC,IAAgB;EAChE,OAAO,UAAC+D,IAAI,EAAEC,IAAI,EAAEpB,OAAO,EAAEC,IAAI;IAC/B,IAAMqB,SAAS,GAAGhD,MAAM,CAACC,IAAI,CAAC0B,IAAI,CAACqB,SAAS,CAAC,CAAC5B,GAAG,CAAC,UAAA6B,QAAQ;MAAI,OAAAtB,IAAI,CAACqB,SAAS,CAACC,QAAQ,CAAC;IAAxB,CAAwB,CAAC;IACvF,IAAMC,QAAQ,GAAG;MACfC,IAAI,EAAElF,SAAA,CAAAmF,IAAI,CAACC,QAAQ;MACnBC,WAAW,EAAAC,cAAA,EAAG5B,IAAI,CAAC6B,SAAS,GAAKR,SAAS;KAC3C;IAED,IAAMQ,SAAS,GAAG;MAChBC,KAAK,EAAEP,QAAQ;MACfQ,SAAS,EAAE/B,IAAI,CAACgC,cAAc;MAC9BjC,OAAO,EAAE;QAAEkC,cAAc,EAAElC;MAAO;KACnC;IAED,IAAMsC,UAAU,GAAG7F,eAAA,CAAA8F,OAAO,CAACnF,IAAI,EAAE0E,SAAS,CAAC;IAE3C,OAAO9E,2BAAA,CAAAwF,yBAAyB,CAACF,UAAU,CAAC;EAC9C,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}