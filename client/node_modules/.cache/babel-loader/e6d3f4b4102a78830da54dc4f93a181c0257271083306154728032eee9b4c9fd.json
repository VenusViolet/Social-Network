{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst runtimeSupportsUploads_1 = __importDefault(require(\"./utils/runtimeSupportsUploads\"));\nconst processFileUploads = (() => {\n  if (runtimeSupportsUploads_1.default) {\n    return require('@apollographql/graphql-upload-8-fork').processRequest;\n  }\n  return undefined;\n})();\nexports.default = processFileUploads;","map":{"version":3,"names":["runtimeSupportsUploads_1","__importDefault","require","processFileUploads","default","processRequest","undefined","exports"],"sources":["/Users/venusrodin/node_modules/apollo-server-core/src/processFileUploads.ts"],"sourcesContent":["import runtimeSupportsUploads from './utils/runtimeSupportsUploads';\n\n// We'll memoize this function once at module load time since it should never\n// change during runtime.  In the event that we're using a version of Node.js\n// less than 8.5.0, we'll\nconst processFileUploads:\n  | typeof import('@apollographql/graphql-upload-8-fork').processRequest\n  | undefined = (() => {\n  if (runtimeSupportsUploads) {\n    return require('@apollographql/graphql-upload-8-fork')\n      .processRequest as typeof import('@apollographql/graphql-upload-8-fork').processRequest;\n  }\n  return undefined;\n})();\n\nexport default processFileUploads;\n"],"mappings":";;;;;;;;;;AAAA,MAAAA,wBAAA,GAAAC,eAAA,CAAAC,OAAA;AAKA,MAAMC,kBAAkB,GAER,CAAC,MAAK;EACpB,IAAIH,wBAAA,CAAAI,OAAsB,EAAE;IAC1B,OAAOF,OAAO,CAAC,sCAAsC,CAAC,CACnDG,cAAsF;;EAE3F,OAAOC,SAAS;AAClB,CAAC,GAAG;AAEJC,OAAA,CAAAH,OAAA,GAAeD,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}