{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApolloServerPluginInlineTraceDisabled = exports.ApolloServerPluginInlineTrace = exports.ApolloServerPluginSchemaReporting = exports.ApolloServerPluginUsageReportingFromLegacyOptions = exports.ApolloServerPluginUsageReportingDisabled = exports.ApolloServerPluginUsageReporting = void 0;\nfunction ApolloServerPluginUsageReporting() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.create(null);\n  return require('./usageReporting').ApolloServerPluginUsageReporting(options);\n}\nexports.ApolloServerPluginUsageReporting = ApolloServerPluginUsageReporting;\nfunction ApolloServerPluginUsageReportingDisabled() {\n  return require('./usageReporting').ApolloServerPluginUsageReportingDisabled();\n}\nexports.ApolloServerPluginUsageReportingDisabled = ApolloServerPluginUsageReportingDisabled;\nfunction ApolloServerPluginUsageReportingFromLegacyOptions() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.create(null);\n  return require('./usageReporting').ApolloServerPluginUsageReportingFromLegacyOptions(options);\n}\nexports.ApolloServerPluginUsageReportingFromLegacyOptions = ApolloServerPluginUsageReportingFromLegacyOptions;\nfunction ApolloServerPluginSchemaReporting() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.create(null);\n  return require('./schemaReporting').ApolloServerPluginSchemaReporting(options);\n}\nexports.ApolloServerPluginSchemaReporting = ApolloServerPluginSchemaReporting;\nfunction ApolloServerPluginInlineTrace() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.create(null);\n  return require('./inlineTrace').ApolloServerPluginInlineTrace(options);\n}\nexports.ApolloServerPluginInlineTrace = ApolloServerPluginInlineTrace;\nfunction ApolloServerPluginInlineTraceDisabled() {\n  return require('./inlineTrace').ApolloServerPluginInlineTraceDisabled();\n}\nexports.ApolloServerPluginInlineTraceDisabled = ApolloServerPluginInlineTraceDisabled;","map":{"version":3,"names":["ApolloServerPluginUsageReporting","options","arguments","length","undefined","Object","create","require","exports","ApolloServerPluginUsageReportingDisabled","ApolloServerPluginUsageReportingFromLegacyOptions","ApolloServerPluginSchemaReporting","ApolloServerPluginInlineTrace","ApolloServerPluginInlineTraceDisabled"],"sources":["/Users/venusrodin/node_modules/apollo-server-core/src/plugin/index.ts"],"sourcesContent":["// apollo-server-core ships with several plugins. Some of them have relatively\n// heavy-weight or Node-specific dependencies. To avoid having to import these\n// dependencies in every single usage of apollo-server-core, all the plugins\n// are exported at runtime via this file. The rules are:\n//\n// - Files in apollo-server-core outside of `plugin` should not import anything\n//   from a nested directory under `plugin` directly, but should always go\n//   through this file.\n// - This file may not have any plain top-level `import` directives\n// - It may have top-level `import type` directives, which are included\n//   in the generated TypeScript `.d.ts` file but not in the JS `.js` file.\n// - It may call `require` at runtime to pull in the individual plugins,\n//   via functions that have the same interface as functions in the individual\n//   plugins.\n//\n// The goal is that the generated `dist/plugin/index.js` file has no top-level\n// require calls.\nimport type { ApolloServerPlugin } from 'apollo-server-plugin-base';\n\nimport type {\n  ApolloServerPluginUsageReportingOptions,\n  EngineReportingOptions,\n} from './usageReporting';\nexport type {\n  ApolloServerPluginUsageReportingOptions,\n  SendValuesBaseOptions,\n  VariableValueOptions,\n  ClientInfo,\n  GenerateClientInfo,\n  EngineReportingOptions, // deprecated\n} from './usageReporting';\n\nimport type { ApolloServerPluginSchemaReportingOptions } from './schemaReporting';\nexport type { ApolloServerPluginSchemaReportingOptions } from './schemaReporting';\nimport type { ApolloServerPluginInlineTraceOptions } from './inlineTrace';\nexport type { ApolloServerPluginInlineTraceOptions } from './inlineTrace';\n\n//#region Usage reporting\nexport function ApolloServerPluginUsageReporting<TContext>(\n  options: ApolloServerPluginUsageReportingOptions<TContext> = Object.create(\n    null,\n  ),\n): ApolloServerPlugin {\n  return require('./usageReporting').ApolloServerPluginUsageReporting(options);\n}\nexport function ApolloServerPluginUsageReportingDisabled(): ApolloServerPlugin {\n  return require('./usageReporting').ApolloServerPluginUsageReportingDisabled();\n}\nexport function ApolloServerPluginUsageReportingFromLegacyOptions<TContext>(\n  options: EngineReportingOptions<TContext> = Object.create(null),\n): ApolloServerPlugin {\n  return require('./usageReporting').ApolloServerPluginUsageReportingFromLegacyOptions(\n    options,\n  );\n}\n//#endregion\n\n//#region Schema reporting\nexport function ApolloServerPluginSchemaReporting(\n  options: ApolloServerPluginSchemaReportingOptions = Object.create(null),\n): ApolloServerPlugin {\n  return require('./schemaReporting').ApolloServerPluginSchemaReporting(\n    options,\n  );\n}\n//#endregion\n\n//#region Inline trace\nexport function ApolloServerPluginInlineTrace(\n  options: ApolloServerPluginInlineTraceOptions = Object.create(null),\n): ApolloServerPlugin {\n  return require('./inlineTrace').ApolloServerPluginInlineTrace(options);\n}\nexport function ApolloServerPluginInlineTraceDisabled(): ApolloServerPlugin {\n  return require('./inlineTrace').ApolloServerPluginInlineTraceDisabled();\n}\n//#endregion\n"],"mappings":";;;;;;AAsCA,SAAgBA,gCAAgCA,CAAA,EAG7C;EAAA,IAFDC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA6DG,MAAM,CAACC,MAAM,CACxE,IAAI,CACL;EAED,OAAOC,OAAO,CAAC,kBAAkB,CAAC,CAACP,gCAAgC,CAACC,OAAO,CAAC;AAC9E;AANAO,OAAA,CAAAR,gCAAA,GAAAA,gCAAA;AAOA,SAAgBS,wCAAwCA,CAAA;EACtD,OAAOF,OAAO,CAAC,kBAAkB,CAAC,CAACE,wCAAwC,EAAE;AAC/E;AAFAD,OAAA,CAAAC,wCAAA,GAAAA,wCAAA;AAGA,SAAgBC,iDAAiDA,CAAA,EACA;EAAA,IAA/DT,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA4CG,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EAE/D,OAAOC,OAAO,CAAC,kBAAkB,CAAC,CAACG,iDAAiD,CAClFT,OAAO,CACR;AACH;AANAO,OAAA,CAAAE,iDAAA,GAAAA,iDAAA;AAUA,SAAgBC,iCAAiCA,CAAA,EACwB;EAAA,IAAvEV,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAoDG,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EAEvE,OAAOC,OAAO,CAAC,mBAAmB,CAAC,CAACI,iCAAiC,CACnEV,OAAO,CACR;AACH;AANAO,OAAA,CAAAG,iCAAA,GAAAA,iCAAA;AAUA,SAAgBC,6BAA6BA,CAAA,EACwB;EAAA,IAAnEX,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAgDG,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EAEnE,OAAOC,OAAO,CAAC,eAAe,CAAC,CAACK,6BAA6B,CAACX,OAAO,CAAC;AACxE;AAJAO,OAAA,CAAAI,6BAAA,GAAAA,6BAAA;AAKA,SAAgBC,qCAAqCA,CAAA;EACnD,OAAON,OAAO,CAAC,eAAe,CAAC,CAACM,qCAAqC,EAAE;AACzE;AAFAL,OAAA,CAAAK,qCAAA,GAAAA,qCAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}