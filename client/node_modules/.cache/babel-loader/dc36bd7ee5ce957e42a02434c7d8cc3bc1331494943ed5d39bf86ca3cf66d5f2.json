{"ast":null,"code":"var __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar graphql_1 = require(\"graphql\");\nvar schemaRecreation_1 = require(\"../stitching/schemaRecreation\");\nvar VisitSchemaKind;\n(function (VisitSchemaKind) {\n  VisitSchemaKind[\"TYPE\"] = \"VisitSchemaKind.TYPE\";\n  VisitSchemaKind[\"SCALAR_TYPE\"] = \"VisitSchemaKind.SCALAR_TYPE\";\n  VisitSchemaKind[\"ENUM_TYPE\"] = \"VisitSchemaKind.ENUM_TYPE\";\n  VisitSchemaKind[\"COMPOSITE_TYPE\"] = \"VisitSchemaKind.COMPOSITE_TYPE\";\n  VisitSchemaKind[\"OBJECT_TYPE\"] = \"VisitSchemaKind.OBJECT_TYPE\";\n  VisitSchemaKind[\"INPUT_OBJECT_TYPE\"] = \"VisitSchemaKind.INPUT_OBJECT_TYPE\";\n  VisitSchemaKind[\"ABSTRACT_TYPE\"] = \"VisitSchemaKind.ABSTRACT_TYPE\";\n  VisitSchemaKind[\"UNION_TYPE\"] = \"VisitSchemaKind.UNION_TYPE\";\n  VisitSchemaKind[\"INTERFACE_TYPE\"] = \"VisitSchemaKind.INTERFACE_TYPE\";\n  VisitSchemaKind[\"ROOT_OBJECT\"] = \"VisitSchemaKind.ROOT_OBJECT\";\n  VisitSchemaKind[\"QUERY\"] = \"VisitSchemaKind.QUERY\";\n  VisitSchemaKind[\"MUTATION\"] = \"VisitSchemaKind.MUTATION\";\n  VisitSchemaKind[\"SUBSCRIPTION\"] = \"VisitSchemaKind.SUBSCRIPTION\";\n})(VisitSchemaKind = exports.VisitSchemaKind || (exports.VisitSchemaKind = {}));\nfunction visitSchema(schema, visitor, stripResolvers) {\n  var types = {};\n  var resolveType = schemaRecreation_1.createResolveType(function (name) {\n    if (typeof types[name] === 'undefined') {\n      throw new Error(\"Can't find type \" + name + \".\");\n    }\n    return types[name];\n  });\n  var queryType = schema.getQueryType();\n  var mutationType = schema.getMutationType();\n  var subscriptionType = schema.getSubscriptionType();\n  var typeMap = schema.getTypeMap();\n  Object.keys(typeMap).map(function (typeName) {\n    var type = typeMap[typeName];\n    if (graphql_1.isNamedType(type) && graphql_1.getNamedType(type).name.slice(0, 2) !== '__') {\n      var specifiers = getTypeSpecifiers(type, schema);\n      var typeVisitor = getVisitor(visitor, specifiers);\n      if (typeVisitor) {\n        var result = typeVisitor(type, schema);\n        if (typeof result === 'undefined') {\n          types[typeName] = schemaRecreation_1.recreateType(type, resolveType, !stripResolvers);\n        } else if (result === null) {\n          types[typeName] = null;\n        } else {\n          types[typeName] = schemaRecreation_1.recreateType(result, resolveType, !stripResolvers);\n        }\n      } else {\n        types[typeName] = schemaRecreation_1.recreateType(type, resolveType, !stripResolvers);\n      }\n    }\n  });\n  return new graphql_1.GraphQLSchema({\n    query: queryType ? types[queryType.name] : null,\n    mutation: mutationType ? types[mutationType.name] : null,\n    subscription: subscriptionType ? types[subscriptionType.name] : null,\n    types: Object.keys(types).map(function (name) {\n      return types[name];\n    })\n  });\n}\nexports.visitSchema = visitSchema;\nfunction getTypeSpecifiers(type, schema) {\n  var specifiers = [VisitSchemaKind.TYPE];\n  if (type instanceof graphql_1.GraphQLObjectType) {\n    specifiers.unshift(VisitSchemaKind.COMPOSITE_TYPE, VisitSchemaKind.OBJECT_TYPE);\n    var query = schema.getQueryType();\n    var mutation = schema.getMutationType();\n    var subscription = schema.getSubscriptionType();\n    if (type === query) {\n      specifiers.push(VisitSchemaKind.ROOT_OBJECT, VisitSchemaKind.QUERY);\n    } else if (type === mutation) {\n      specifiers.push(VisitSchemaKind.ROOT_OBJECT, VisitSchemaKind.MUTATION);\n    } else if (type === subscription) {\n      specifiers.push(VisitSchemaKind.ROOT_OBJECT, VisitSchemaKind.SUBSCRIPTION);\n    }\n  } else if (type instanceof graphql_1.GraphQLInputObjectType) {\n    specifiers.push(VisitSchemaKind.INPUT_OBJECT_TYPE);\n  } else if (type instanceof graphql_1.GraphQLInterfaceType) {\n    specifiers.push(VisitSchemaKind.COMPOSITE_TYPE, VisitSchemaKind.ABSTRACT_TYPE, VisitSchemaKind.INTERFACE_TYPE);\n  } else if (type instanceof graphql_1.GraphQLUnionType) {\n    specifiers.push(VisitSchemaKind.COMPOSITE_TYPE, VisitSchemaKind.ABSTRACT_TYPE, VisitSchemaKind.UNION_TYPE);\n  } else if (type instanceof graphql_1.GraphQLEnumType) {\n    specifiers.push(VisitSchemaKind.ENUM_TYPE);\n  } else if (type instanceof graphql_1.GraphQLScalarType) {\n    specifiers.push(VisitSchemaKind.SCALAR_TYPE);\n  }\n  return specifiers;\n}\nfunction getVisitor(visitor, specifiers) {\n  var typeVisitor = null;\n  var stack = __spreadArrays(specifiers);\n  while (!typeVisitor && stack.length > 0) {\n    var next = stack.pop();\n    typeVisitor = visitor[next];\n  }\n  return typeVisitor;\n}","map":{"version":3,"names":["graphql_1","require","schemaRecreation_1","VisitSchemaKind","exports","visitSchema","schema","visitor","stripResolvers","types","resolveType","createResolveType","name","Error","queryType","getQueryType","mutationType","getMutationType","subscriptionType","getSubscriptionType","typeMap","getTypeMap","Object","keys","map","typeName","type","isNamedType","getNamedType","slice","specifiers","getTypeSpecifiers","typeVisitor","getVisitor","result","recreateType","GraphQLSchema","query","mutation","subscription","TYPE","GraphQLObjectType","unshift","COMPOSITE_TYPE","OBJECT_TYPE","push","ROOT_OBJECT","QUERY","MUTATION","SUBSCRIPTION","GraphQLInputObjectType","INPUT_OBJECT_TYPE","GraphQLInterfaceType","ABSTRACT_TYPE","INTERFACE_TYPE","GraphQLUnionType","UNION_TYPE","GraphQLEnumType","ENUM_TYPE","GraphQLScalarType","SCALAR_TYPE","stack","__spreadArrays","length","next","pop"],"sources":["../../src/transforms/visitSchema.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}