{"ast":null,"code":"function __export(m) {\n  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar graphql_1 = require(\"graphql\");\nvar schemaVisitor_1 = require(\"./schemaVisitor\");\nvar mergeDeep_1 = require(\"./mergeDeep\");\nvar generate_1 = require(\"./generate\");\nfunction makeExecutableSchema(_a) {\n  var typeDefs = _a.typeDefs,\n    _b = _a.resolvers,\n    resolvers = _b === void 0 ? {} : _b,\n    connectors = _a.connectors,\n    logger = _a.logger,\n    _c = _a.allowUndefinedInResolve,\n    allowUndefinedInResolve = _c === void 0 ? true : _c,\n    _d = _a.resolverValidationOptions,\n    resolverValidationOptions = _d === void 0 ? {} : _d,\n    _e = _a.directiveResolvers,\n    directiveResolvers = _e === void 0 ? null : _e,\n    _f = _a.schemaDirectives,\n    schemaDirectives = _f === void 0 ? null : _f,\n    _g = _a.parseOptions,\n    parseOptions = _g === void 0 ? {} : _g,\n    _h = _a.inheritResolversFromInterfaces,\n    inheritResolversFromInterfaces = _h === void 0 ? false : _h;\n  // Validate and clean up arguments\n  if (typeof resolverValidationOptions !== 'object') {\n    throw new generate_1.SchemaError('Expected `resolverValidationOptions` to be an object');\n  }\n  if (!typeDefs) {\n    throw new generate_1.SchemaError('Must provide typeDefs');\n  }\n  if (!resolvers) {\n    throw new generate_1.SchemaError('Must provide resolvers');\n  }\n  // We allow passing in an array of resolver maps, in which case we merge them\n  var resolverMap = Array.isArray(resolvers) ? resolvers.filter(function (resolverObj) {\n    return typeof resolverObj === 'object';\n  }).reduce(mergeDeep_1.default, {}) : resolvers;\n  // Arguments are now validated and cleaned up\n  var schema = generate_1.buildSchemaFromTypeDefinitions(typeDefs, parseOptions);\n  schema = generate_1.addResolveFunctionsToSchema({\n    schema: schema,\n    resolvers: resolverMap,\n    resolverValidationOptions: resolverValidationOptions,\n    inheritResolversFromInterfaces: inheritResolversFromInterfaces\n  });\n  generate_1.assertResolveFunctionsPresent(schema, resolverValidationOptions);\n  if (!allowUndefinedInResolve) {\n    addCatchUndefinedToSchema(schema);\n  }\n  if (logger) {\n    addErrorLoggingToSchema(schema, logger);\n  }\n  if (typeof resolvers['__schema'] === 'function') {\n    // TODO a bit of a hack now, better rewrite generateSchema to attach it there.\n    // not doing that now, because I'd have to rewrite a lot of tests.\n    generate_1.addSchemaLevelResolveFunction(schema, resolvers['__schema']);\n  }\n  if (connectors) {\n    // connectors are optional, at least for now. That means you can just import them in the resolve\n    // function if you want.\n    generate_1.attachConnectorsToContext(schema, connectors);\n  }\n  if (directiveResolvers) {\n    generate_1.attachDirectiveResolvers(schema, directiveResolvers);\n  }\n  if (schemaDirectives) {\n    schemaVisitor_1.SchemaDirectiveVisitor.visitSchemaDirectives(schema, schemaDirectives);\n  }\n  return schema;\n}\nexports.makeExecutableSchema = makeExecutableSchema;\nfunction decorateToCatchUndefined(fn, hint) {\n  if (typeof fn === 'undefined') {\n    fn = graphql_1.defaultFieldResolver;\n  }\n  return function (root, args, ctx, info) {\n    var result = fn(root, args, ctx, info);\n    if (typeof result === 'undefined') {\n      throw new Error(\"Resolve function for \\\"\" + hint + \"\\\" returned undefined\");\n    }\n    return result;\n  };\n}\nfunction addCatchUndefinedToSchema(schema) {\n  generate_1.forEachField(schema, function (field, typeName, fieldName) {\n    var errorHint = typeName + \".\" + fieldName;\n    field.resolve = decorateToCatchUndefined(field.resolve, errorHint);\n  });\n}\nexports.addCatchUndefinedToSchema = addCatchUndefinedToSchema;\nfunction addErrorLoggingToSchema(schema, logger) {\n  if (!logger) {\n    throw new Error('Must provide a logger');\n  }\n  if (typeof logger.log !== 'function') {\n    throw new Error('Logger.log must be a function');\n  }\n  generate_1.forEachField(schema, function (field, typeName, fieldName) {\n    var errorHint = typeName + \".\" + fieldName;\n    field.resolve = generate_1.decorateWithLogger(field.resolve, logger, errorHint);\n  });\n}\nexports.addErrorLoggingToSchema = addErrorLoggingToSchema;\n__export(require(\"./generate\"));","map":{"version":3,"names":["graphql_1","require","schemaVisitor_1","mergeDeep_1","generate_1","makeExecutableSchema","_a","typeDefs","_b","resolvers","connectors","logger","_c","allowUndefinedInResolve","_d","resolverValidationOptions","_e","directiveResolvers","_f","schemaDirectives","_g","parseOptions","_h","inheritResolversFromInterfaces","SchemaError","resolverMap","Array","isArray","filter","resolverObj","reduce","default","schema","buildSchemaFromTypeDefinitions","addResolveFunctionsToSchema","assertResolveFunctionsPresent","addCatchUndefinedToSchema","addErrorLoggingToSchema","addSchemaLevelResolveFunction","attachConnectorsToContext","attachDirectiveResolvers","SchemaDirectiveVisitor","visitSchemaDirectives","exports","decorateToCatchUndefined","fn","hint","defaultFieldResolver","root","args","ctx","info","result","Error","forEachField","field","typeName","fieldName","errorHint","resolve","log","decorateWithLogger","__export"],"sources":["../src/makeExecutableSchema.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}