{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GraphQLUpload = exports.gql = void 0;\nrequire(\"apollo-server-env\");\nvar runHttpQuery_1 = require(\"./runHttpQuery\");\nObject.defineProperty(exports, \"runHttpQuery\", {\n  enumerable: true,\n  get: function () {\n    return runHttpQuery_1.runHttpQuery;\n  }\n});\nObject.defineProperty(exports, \"HttpQueryError\", {\n  enumerable: true,\n  get: function () {\n    return runHttpQuery_1.HttpQueryError;\n  }\n});\nvar graphqlOptions_1 = require(\"./graphqlOptions\");\nObject.defineProperty(exports, \"resolveGraphqlOptions\", {\n  enumerable: true,\n  get: function () {\n    return graphqlOptions_1.resolveGraphqlOptions;\n  }\n});\nvar apollo_server_errors_1 = require(\"apollo-server-errors\");\nObject.defineProperty(exports, \"ApolloError\", {\n  enumerable: true,\n  get: function () {\n    return apollo_server_errors_1.ApolloError;\n  }\n});\nObject.defineProperty(exports, \"toApolloError\", {\n  enumerable: true,\n  get: function () {\n    return apollo_server_errors_1.toApolloError;\n  }\n});\nObject.defineProperty(exports, \"SyntaxError\", {\n  enumerable: true,\n  get: function () {\n    return apollo_server_errors_1.SyntaxError;\n  }\n});\nObject.defineProperty(exports, \"ValidationError\", {\n  enumerable: true,\n  get: function () {\n    return apollo_server_errors_1.ValidationError;\n  }\n});\nObject.defineProperty(exports, \"AuthenticationError\", {\n  enumerable: true,\n  get: function () {\n    return apollo_server_errors_1.AuthenticationError;\n  }\n});\nObject.defineProperty(exports, \"ForbiddenError\", {\n  enumerable: true,\n  get: function () {\n    return apollo_server_errors_1.ForbiddenError;\n  }\n});\nObject.defineProperty(exports, \"UserInputError\", {\n  enumerable: true,\n  get: function () {\n    return apollo_server_errors_1.UserInputError;\n  }\n});\nObject.defineProperty(exports, \"formatApolloErrors\", {\n  enumerable: true,\n  get: function () {\n    return apollo_server_errors_1.formatApolloErrors;\n  }\n});\nvar nodeHttpToRequest_1 = require(\"./nodeHttpToRequest\");\nObject.defineProperty(exports, \"convertNodeHttpToRequest\", {\n  enumerable: true,\n  get: function () {\n    return nodeHttpToRequest_1.convertNodeHttpToRequest;\n  }\n});\nvar playground_1 = require(\"./playground\");\nObject.defineProperty(exports, \"createPlaygroundOptions\", {\n  enumerable: true,\n  get: function () {\n    return playground_1.createPlaygroundOptions;\n  }\n});\nObject.defineProperty(exports, \"defaultPlaygroundOptions\", {\n  enumerable: true,\n  get: function () {\n    return playground_1.defaultPlaygroundOptions;\n  }\n});\nvar ApolloServer_1 = require(\"./ApolloServer\");\nObject.defineProperty(exports, \"ApolloServerBase\", {\n  enumerable: true,\n  get: function () {\n    return ApolloServer_1.ApolloServerBase;\n  }\n});\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./requestPipelineAPI\"), exports);\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.gql = graphql_tag_1.default;\nconst runtimeSupportsUploads_1 = __importDefault(require(\"./utils/runtimeSupportsUploads\"));\nvar processFileUploads_1 = require(\"./processFileUploads\");\nObject.defineProperty(exports, \"processFileUploads\", {\n  enumerable: true,\n  get: function () {\n    return processFileUploads_1.default;\n  }\n});\nexports.GraphQLUpload = runtimeSupportsUploads_1.default ? require('@apollographql/graphql-upload-8-fork').GraphQLUpload : undefined;\n__exportStar(require(\"./plugin\"), exports);","map":{"version":3,"names":["require","runHttpQuery_1","Object","defineProperty","exports","enumerable","get","runHttpQuery","HttpQueryError","graphqlOptions_1","resolveGraphqlOptions","apollo_server_errors_1","ApolloError","toApolloError","SyntaxError","ValidationError","AuthenticationError","ForbiddenError","UserInputError","formatApolloErrors","nodeHttpToRequest_1","convertNodeHttpToRequest","playground_1","createPlaygroundOptions","defaultPlaygroundOptions","ApolloServer_1","ApolloServerBase","__exportStar","graphql_tag_1","__importDefault","gql","default","runtimeSupportsUploads_1","processFileUploads_1","GraphQLUpload","undefined"],"sources":["/Users/venusrodin/node_modules/apollo-server-core/src/index.ts"],"sourcesContent":["import 'apollo-server-env';\n\nexport { runHttpQuery, HttpQueryRequest, HttpQueryError } from './runHttpQuery';\n\nexport {\n  default as GraphQLOptions,\n  resolveGraphqlOptions,\n  PersistedQueryOptions,\n} from './graphqlOptions';\n\nexport {\n  ApolloError,\n  toApolloError,\n  SyntaxError,\n  ValidationError,\n  AuthenticationError,\n  ForbiddenError,\n  UserInputError,\n  formatApolloErrors,\n} from 'apollo-server-errors';\n\nexport { convertNodeHttpToRequest } from './nodeHttpToRequest';\n\nexport {\n  createPlaygroundOptions,\n  PlaygroundConfig,\n  defaultPlaygroundOptions,\n  PlaygroundRenderPageOptions,\n} from './playground';\n\n// ApolloServer Base class\nexport { ApolloServerBase } from './ApolloServer';\nexport * from './types';\nexport * from './requestPipelineAPI';\n\n// This currently provides the ability to have syntax highlighting as well as\n// consistency between client and server gql tags\nimport { DocumentNode } from 'graphql';\nimport gqlTag from 'graphql-tag';\nexport const gql: (\n  template: TemplateStringsArray | string,\n  ...substitutions: any[]\n) => DocumentNode = gqlTag;\n\nimport runtimeSupportsUploads from './utils/runtimeSupportsUploads';\nimport { GraphQLScalarType } from 'graphql';\nexport { default as processFileUploads } from './processFileUploads';\n\n// This is a conditional export intended to avoid traversing the entire module\n// tree of `graphql-upload` (or specifically, our fork of it).  This only\n// defined if the version of Node.js is >= 8.5.0 since those are the only\n// Node.js versions which are supported by `graphql-upload@8`.  Since the source\n// of `graphql-upload` is not transpiled for older targets (in fact, it includes\n// experimental ECMAScript modules), this conditional export is necessary to\n// avoid modern ECMAScript from failing to parse by versions of Node.js which\n// don't support it (yet â€” eg. Node.js 6 and async/await).\nexport const GraphQLUpload = runtimeSupportsUploads\n  ? (require('@apollographql/graphql-upload-8-fork')\n      .GraphQLUpload as GraphQLScalarType)\n  : undefined;\n\nexport * from './plugin';\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}