{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar graphql_1 = require(\"graphql\");\nvar AddTypenameToAbstract = /** @class */function () {\n  function AddTypenameToAbstract(targetSchema) {\n    this.targetSchema = targetSchema;\n  }\n  AddTypenameToAbstract.prototype.transformRequest = function (originalRequest) {\n    var document = addTypenameToAbstract(this.targetSchema, originalRequest.document);\n    return __assign(__assign({}, originalRequest), {\n      document: document\n    });\n  };\n  return AddTypenameToAbstract;\n}();\nexports.default = AddTypenameToAbstract;\nfunction addTypenameToAbstract(targetSchema, document) {\n  var _a;\n  var typeInfo = new graphql_1.TypeInfo(targetSchema);\n  return graphql_1.visit(document, graphql_1.visitWithTypeInfo(typeInfo, (_a = {}, _a[graphql_1.Kind.SELECTION_SET] = function (node) {\n    var parentType = typeInfo.getParentType();\n    var selections = node.selections;\n    if (parentType && (parentType instanceof graphql_1.GraphQLInterfaceType || parentType instanceof graphql_1.GraphQLUnionType) && !selections.find(function (_) {\n      return _.kind === graphql_1.Kind.FIELD && _.name.value === '__typename';\n    })) {\n      selections = selections.concat({\n        kind: graphql_1.Kind.FIELD,\n        name: {\n          kind: graphql_1.Kind.NAME,\n          value: '__typename'\n        }\n      });\n    }\n    if (selections !== node.selections) {\n      return __assign(__assign({}, node), {\n        selections: selections\n      });\n    }\n  }, _a)));\n}","map":{"version":3,"names":["graphql_1","require","AddTypenameToAbstract","targetSchema","prototype","transformRequest","originalRequest","document","addTypenameToAbstract","__assign","typeInfo","TypeInfo","visit","visitWithTypeInfo","_a","Kind","SELECTION_SET","node","parentType","getParentType","selections","GraphQLInterfaceType","GraphQLUnionType","find","_","kind","FIELD","name","value","concat","NAME"],"sources":["../../src/transforms/AddTypenameToAbstract.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;AAAA,IAAAA,SAAA,GAAAC,OAAA;AAgBA,IAAAC,qBAAA;EAGE,SAAAA,sBAAYC,YAA2B;IACrC,IAAI,CAACA,YAAY,GAAGA,YAAY;EAClC;EAEOD,qBAAA,CAAAE,SAAA,CAAAC,gBAAgB,GAAvB,UAAwBC,eAAwB;IAC9C,IAAMC,QAAQ,GAAGC,qBAAqB,CACpC,IAAI,CAACL,YAAY,EACjBG,eAAe,CAACC,QAAQ,CACzB;IACD,OAAAE,QAAA,CAAAA,QAAA,KACKH,eAAe;MAClBC,QAAQ,EAAAA;IAAA;EAEZ,CAAC;EACH,OAAAL,qBAAC;AAAD,CAAC,EAjBD;;AAmBA,SAASM,qBAAqBA,CAC5BL,YAA2B,EAC3BI,QAAsB;;EAEtB,IAAMG,QAAQ,GAAG,IAAIV,SAAA,CAAAW,QAAQ,CAACR,YAAY,CAAC;EAC3C,OAAOH,SAAA,CAAAY,KAAK,CACVL,QAAQ,EACRP,SAAA,CAAAa,iBAAiB,CAACH,QAAQ,GAAAI,EAAA,OACxBA,EAAA,CAACd,SAAA,CAAAe,IAAI,CAACC,aAAa,IAAnB,UACEC,IAAsB;IAEtB,IAAMC,UAAU,GAAgBR,QAAQ,CAACS,aAAa,EAAE;IACxD,IAAIC,UAAU,GAAGH,IAAI,CAACG,UAAU;IAChC,IACEF,UAAU,KACTA,UAAU,YAAYlB,SAAA,CAAAqB,oBAAoB,IACzCH,UAAU,YAAYlB,SAAA,CAAAsB,gBAAgB,CAAC,IACzC,CAACF,UAAU,CAACG,IAAI,CACd,UAAAC,CAAC;MACC,OAACA,CAAe,CAACC,IAAI,KAAKzB,SAAA,CAAAe,IAAI,CAACW,KAAK,IACnCF,CAAe,CAACG,IAAI,CAACC,KAAK,KAAK,YAAY;IAD5C,CAC4C,CAC/C,EACD;MACAR,UAAU,GAAGA,UAAU,CAACS,MAAM,CAAC;QAC7BJ,IAAI,EAAEzB,SAAA,CAAAe,IAAI,CAACW,KAAK;QAChBC,IAAI,EAAE;UACJF,IAAI,EAAEzB,SAAA,CAAAe,IAAI,CAACe,IAAI;UACfF,KAAK,EAAE;;OAEV,CAAC;;IAGJ,IAAIR,UAAU,KAAKH,IAAI,CAACG,UAAU,EAAE;MAClC,OAAAX,QAAA,CAAAA,QAAA,KACKQ,IAAI;QACPG,UAAU,EAAAA;MAAA;;EAGhB,CAAC,E,IACD,CACH;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}