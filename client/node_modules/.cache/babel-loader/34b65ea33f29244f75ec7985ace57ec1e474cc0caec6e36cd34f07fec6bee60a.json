{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar graphql_1 = require(\"graphql\");\nvar WrapQuery = /** @class */function () {\n  function WrapQuery(path, wrapper, extractor) {\n    this.path = path;\n    this.wrapper = wrapper;\n    this.extractor = extractor;\n  }\n  WrapQuery.prototype.transformRequest = function (originalRequest) {\n    var _a;\n    var _this = this;\n    var document = originalRequest.document;\n    var fieldPath = [];\n    var ourPath = JSON.stringify(this.path);\n    var newDocument = graphql_1.visit(document, (_a = {}, _a[graphql_1.Kind.FIELD] = {\n      enter: function (node) {\n        fieldPath.push(node.name.value);\n        if (ourPath === JSON.stringify(fieldPath)) {\n          var wrapResult = _this.wrapper(node.selectionSet);\n          // Selection can be either a single selection or a selection set. If it's just one selection,\n          // let's wrap it in a selection set. Otherwise, keep it as is.\n          var selectionSet = wrapResult.kind === graphql_1.Kind.SELECTION_SET ? wrapResult : {\n            kind: graphql_1.Kind.SELECTION_SET,\n            selections: [wrapResult]\n          };\n          return __assign(__assign({}, node), {\n            selectionSet: selectionSet\n          });\n        }\n      },\n      leave: function (node) {\n        fieldPath.pop();\n      }\n    }, _a));\n    return __assign(__assign({}, originalRequest), {\n      document: newDocument\n    });\n  };\n  WrapQuery.prototype.transformResult = function (originalResult) {\n    var rootData = originalResult.data;\n    if (rootData) {\n      var data = rootData;\n      var path = __spreadArrays(this.path);\n      while (path.length > 1) {\n        var next = path.shift();\n        if (data[next]) {\n          data = data[next];\n        }\n      }\n      data[path[0]] = this.extractor(data[path[0]]);\n    }\n    return {\n      data: rootData,\n      errors: originalResult.errors\n    };\n  };\n  return WrapQuery;\n}();\nexports.default = WrapQuery;","map":{"version":3,"names":["graphql_1","require","WrapQuery","path","wrapper","extractor","prototype","transformRequest","originalRequest","_this","document","fieldPath","ourPath","JSON","stringify","newDocument","visit","_a","Kind","FIELD","enter","node","push","name","value","wrapResult","selectionSet","kind","SELECTION_SET","selections","__assign","leave","pop","transformResult","originalResult","rootData","data","__spreadArrays","length","next","shift","errors"],"sources":["../../src/transforms/WrapQuery.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;AAAA,IAAAA,SAAA,GAAAC,OAAA;AAKA,IAAAC,SAAA;EAKE,SAAAA,UAAYC,IAAmB,EAAEC,OAAqB,EAAEC,SAA+B;IACrF,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC5B;EAEOH,SAAA,CAAAI,SAAA,CAAAC,gBAAgB,GAAvB,UAAwBC,eAAwB;;IAAhD,IAAAC,KAAA;IACE,IAAMC,QAAQ,GAAGF,eAAe,CAACE,QAAQ;IACzC,IAAMC,SAAS,GAAkB,EAAE;IACnC,IAAMC,OAAO,GAAGC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACX,IAAI,CAAC;IACzC,IAAMY,WAAW,GAAGf,SAAA,CAAAgB,KAAK,CAACN,QAAQ,GAAAO,EAAA,OAChCA,EAAA,CAACjB,SAAA,CAAAkB,IAAI,CAACC,KAAK,IAAG;MACZC,KAAK,EAAE,SAAAA,CAACC,IAAe;QACrBV,SAAS,CAACW,IAAI,CAACD,IAAI,CAACE,IAAI,CAACC,KAAK,CAAC;QAC/B,IAAIZ,OAAO,KAAKC,IAAI,CAACC,SAAS,CAACH,SAAS,CAAC,EAAE;UACzC,IAAMc,UAAU,GAAGhB,KAAI,CAACL,OAAO,CAACiB,IAAI,CAACK,YAAY,CAAC;UAElD;UACA;UACA,IAAMA,YAAY,GAChBD,UAAU,CAACE,IAAI,KAAK3B,SAAA,CAAAkB,IAAI,CAACU,aAAa,GAClCH,UAAU,GACV;YACEE,IAAI,EAAE3B,SAAA,CAAAkB,IAAI,CAACU,aAAa;YACxBC,UAAU,EAAE,CAACJ,UAAU;WACxB;UAEP,OAAAK,QAAA,CAAAA,QAAA,KACKT,IAAI;YACPK,YAAY,EAAAA;UAAA;;MAGlB,CAAC;MACDK,KAAK,EAAE,SAAAA,CAACV,IAAe;QACrBV,SAAS,CAACqB,GAAG,EAAE;MACjB;KACD,E,IACD;IACF,OAAAF,QAAA,CAAAA,QAAA,KACKtB,eAAe;MAClBE,QAAQ,EAAEK;IAAW;EAEzB,CAAC;EAEMb,SAAA,CAAAI,SAAA,CAAA2B,eAAe,GAAtB,UAAuBC,cAAsB;IAC3C,IAAMC,QAAQ,GAAGD,cAAc,CAACE,IAAI;IACpC,IAAID,QAAQ,EAAE;MACZ,IAAIC,IAAI,GAAGD,QAAQ;MACnB,IAAMhC,IAAI,GAAAkC,cAAA,CAAO,IAAI,CAAClC,IAAI,CAAC;MAC3B,OAAOA,IAAI,CAACmC,MAAM,GAAG,CAAC,EAAE;QACtB,IAAMC,IAAI,GAAGpC,IAAI,CAACqC,KAAK,EAAE;QACzB,IAAIJ,IAAI,CAACG,IAAI,CAAC,EAAE;UACdH,IAAI,GAAGA,IAAI,CAACG,IAAI,CAAC;;;MAGrBH,IAAI,CAACjC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAACE,SAAS,CAAC+B,IAAI,CAACjC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;IAG/C,OAAO;MACLiC,IAAI,EAAED,QAAQ;MACdM,MAAM,EAAEP,cAAc,CAACO;KACxB;EACH,CAAC;EACH,OAAAvC,SAAC;AAAD,CAAC,EApED"},"metadata":{},"sourceType":"script","externalDependencies":[]}