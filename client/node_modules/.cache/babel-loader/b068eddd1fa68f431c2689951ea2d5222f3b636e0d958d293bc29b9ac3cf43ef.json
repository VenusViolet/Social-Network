{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isDirectiveDefined = void 0;\nconst language_1 = require(\"graphql/language\");\nconst __1 = require(\"../\");\nexports.isDirectiveDefined = (typeDefs, directiveName) => {\n  typeDefs = Array.isArray(typeDefs) ? typeDefs : [typeDefs];\n  return typeDefs.some(typeDef => {\n    if (typeof typeDef === 'string') {\n      typeDef = __1.gql(typeDef);\n    }\n    return typeDef.definitions.some(definition => definition.kind === language_1.Kind.DIRECTIVE_DEFINITION && definition.name.value === directiveName);\n  });\n};","map":{"version":3,"names":["language_1","require","__1","exports","isDirectiveDefined","typeDefs","directiveName","Array","isArray","some","typeDef","gql","definitions","definition","kind","Kind","DIRECTIVE_DEFINITION","name","value"],"sources":["/Users/venusrodin/node_modules/apollo-server-core/src/utils/isDirectiveDefined.ts"],"sourcesContent":["import { DocumentNode, Kind } from 'graphql/language';\nimport { gql } from '../';\n\nexport const isDirectiveDefined = (\n  typeDefs: (DocumentNode | string)[],\n  directiveName: string,\n): boolean => {\n  // If we didn't receive an array of what we want, ensure it's an array.\n  typeDefs = Array.isArray(typeDefs) ? typeDefs : [typeDefs];\n\n  return typeDefs.some(typeDef => {\n    if (typeof typeDef === 'string') {\n      typeDef = gql(typeDef);\n    }\n\n    return typeDef.definitions.some(\n      definition =>\n        definition.kind === Kind.DIRECTIVE_DEFINITION &&\n        definition.name.value === directiveName,\n    );\n  });\n};\n"],"mappings":";;;;;;AAAA,MAAAA,UAAA,GAAAC,OAAA;AACA,MAAAC,GAAA,GAAAD,OAAA;AAEaE,OAAA,CAAAC,kBAAkB,GAAG,CAChCC,QAAmC,EACnCC,aAAqB,KACV;EAEXD,QAAQ,GAAGE,KAAK,CAACC,OAAO,CAACH,QAAQ,CAAC,GAAGA,QAAQ,GAAG,CAACA,QAAQ,CAAC;EAE1D,OAAOA,QAAQ,CAACI,IAAI,CAACC,OAAO,IAAG;IAC7B,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;MAC/BA,OAAO,GAAGR,GAAA,CAAAS,GAAG,CAACD,OAAO,CAAC;;IAGxB,OAAOA,OAAO,CAACE,WAAW,CAACH,IAAI,CAC7BI,UAAU,IACRA,UAAU,CAACC,IAAI,KAAKd,UAAA,CAAAe,IAAI,CAACC,oBAAoB,IAC7CH,UAAU,CAACI,IAAI,CAACC,KAAK,KAAKZ,aAAa,CAC1C;EACH,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}