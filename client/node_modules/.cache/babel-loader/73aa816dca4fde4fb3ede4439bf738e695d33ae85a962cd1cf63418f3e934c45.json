{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPlaygroundOptions = exports.defaultPlaygroundOptions = void 0;\nconst playgroundVersion = '1.7.42';\nexports.defaultPlaygroundOptions = {\n  version: playgroundVersion,\n  settings: {\n    'general.betaUpdates': false,\n    'editor.theme': 'dark',\n    'editor.cursorShape': 'line',\n    'editor.reuseHeaders': true,\n    'tracing.hideTracingResponse': true,\n    'queryPlan.hideQueryPlanResponse': true,\n    'editor.fontSize': 14,\n    'editor.fontFamily': `'Source Code Pro', 'Consolas', 'Inconsolata', 'Droid Sans Mono', 'Monaco', monospace`,\n    'request.credentials': 'omit'\n  }\n};\nfunction createPlaygroundOptions(playground) {\n  const isDev = process.env.NODE_ENV !== 'production';\n  const enabled = typeof playground !== 'undefined' ? !!playground : isDev;\n  if (!enabled) {\n    return undefined;\n  }\n  const playgroundOverrides = typeof playground === 'boolean' ? {} : playground || {};\n  const settingsOverrides = playgroundOverrides.hasOwnProperty('settings') ? {\n    settings: Object.assign(Object.assign({}, exports.defaultPlaygroundOptions.settings), playgroundOverrides.settings)\n  } : {\n    settings: undefined\n  };\n  const playgroundOptions = Object.assign(Object.assign(Object.assign({}, exports.defaultPlaygroundOptions), playgroundOverrides), settingsOverrides);\n  return playgroundOptions;\n}\nexports.createPlaygroundOptions = createPlaygroundOptions;","map":{"version":3,"names":["playgroundVersion","exports","defaultPlaygroundOptions","version","settings","createPlaygroundOptions","playground","isDev","process","env","NODE_ENV","enabled","undefined","playgroundOverrides","settingsOverrides","hasOwnProperty","Object","assign","playgroundOptions"],"sources":["/Users/venusrodin/node_modules/apollo-server-core/src/playground.ts"],"sourcesContent":["import {\n  CursorShape,\n  RenderPageOptions as PlaygroundRenderPageOptions,\n  Theme,\n} from '@apollographql/graphql-playground-html/dist/render-playground-page';\nexport {\n  RenderPageOptions as PlaygroundRenderPageOptions,\n} from '@apollographql/graphql-playground-html/dist/render-playground-page';\n\n// This specifies the React version of our fork of GraphQL Playground,\n// `@apollographql/graphql-playground-react`.  It is related to, but not to\n// be confused with, the `@apollographql/graphql-playground-html` package which\n// is a dependency of Apollo Server's various integration `package.json`s files.\n//\n// The HTML (stub) file renders a `<script>` tag that loads the React (guts)\n// from a CDN URL on jsdelivr.com, which allows serving of files from npm packages.\n// \n// The version is passed to `@apollographql/graphql-playground-html`'s\n// `renderPlaygroundPage` via the integration packages' `playground` config.\nconst playgroundVersion = '1.7.42';\n\n// https://stackoverflow.com/a/51365037\ntype RecursivePartial<T> = {\n  [P in keyof T]?: T[P] extends (infer U)[]\n    ? RecursivePartial<U>[]\n    : T[P] extends (object | undefined)\n    ? RecursivePartial<T[P]>\n    : T[P];\n};\n\nexport type PlaygroundConfig =\n  | RecursivePartial<PlaygroundRenderPageOptions>\n  | boolean;\n\nexport const defaultPlaygroundOptions = {\n  version: playgroundVersion,\n  settings: {\n    'general.betaUpdates': false,\n    'editor.theme': 'dark' as Theme,\n    'editor.cursorShape': 'line' as CursorShape,\n    'editor.reuseHeaders': true,\n    'tracing.hideTracingResponse': true,\n    'queryPlan.hideQueryPlanResponse': true,\n    'editor.fontSize': 14,\n    'editor.fontFamily': `'Source Code Pro', 'Consolas', 'Inconsolata', 'Droid Sans Mono', 'Monaco', monospace`,\n    'request.credentials': 'omit',\n  },\n};\n\nexport function createPlaygroundOptions(\n  playground?: PlaygroundConfig,\n): PlaygroundRenderPageOptions | undefined {\n  const isDev = process.env.NODE_ENV !== 'production';\n  const enabled: boolean =\n    typeof playground !== 'undefined' ? !!playground : isDev;\n\n  if (!enabled) {\n    return undefined;\n  }\n\n  const playgroundOverrides =\n    typeof playground === 'boolean' ? {} : playground || {};\n\n  const settingsOverrides = playgroundOverrides.hasOwnProperty('settings')\n    ? {\n        settings: {\n          ...defaultPlaygroundOptions.settings,\n          ...playgroundOverrides.settings,\n        },\n      }\n    : { settings: undefined };\n\n  const playgroundOptions: any = {\n    ...defaultPlaygroundOptions,\n    ...playgroundOverrides,\n    ...settingsOverrides,\n  };\n\n  return playgroundOptions;\n}\n"],"mappings":";;;;;;AAmBA,MAAMA,iBAAiB,GAAG,QAAQ;AAerBC,OAAA,CAAAC,wBAAwB,GAAG;EACtCC,OAAO,EAAEH,iBAAiB;EAC1BI,QAAQ,EAAE;IACR,qBAAqB,EAAE,KAAK;IAC5B,cAAc,EAAE,MAAe;IAC/B,oBAAoB,EAAE,MAAqB;IAC3C,qBAAqB,EAAE,IAAI;IAC3B,6BAA6B,EAAE,IAAI;IACnC,iCAAiC,EAAE,IAAI;IACvC,iBAAiB,EAAE,EAAE;IACrB,mBAAmB,EAAE,sFAAsF;IAC3G,qBAAqB,EAAE;;CAE1B;AAED,SAAgBC,uBAAuBA,CACrCC,UAA6B;EAE7B,MAAMC,KAAK,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;EACnD,MAAMC,OAAO,GACX,OAAOL,UAAU,KAAK,WAAW,GAAG,CAAC,CAACA,UAAU,GAAGC,KAAK;EAE1D,IAAI,CAACI,OAAO,EAAE;IACZ,OAAOC,SAAS;;EAGlB,MAAMC,mBAAmB,GACvB,OAAOP,UAAU,KAAK,SAAS,GAAG,EAAE,GAAGA,UAAU,IAAI,EAAE;EAEzD,MAAMQ,iBAAiB,GAAGD,mBAAmB,CAACE,cAAc,CAAC,UAAU,CAAC,GACpE;IACEX,QAAQ,EAAAY,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACHhB,OAAA,CAAAC,wBAAwB,CAACE,QAAQ,GACjCS,mBAAmB,CAACT,QAAQ;GAElC,GACD;IAAEA,QAAQ,EAAEQ;EAAS,CAAE;EAE3B,MAAMM,iBAAiB,GAAAF,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAClBhB,OAAA,CAAAC,wBAAwB,GACxBW,mBAAmB,GACnBC,iBAAiB,CACrB;EAED,OAAOI,iBAAiB;AAC1B;AA9BAjB,OAAA,CAAAI,uBAAA,GAAAA,uBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}