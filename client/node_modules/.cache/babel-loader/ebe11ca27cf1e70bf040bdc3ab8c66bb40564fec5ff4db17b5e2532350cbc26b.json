{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar graphql_1 = require(\"graphql\");\nfunction extendResolversFromInterfaces(schema, resolvers) {\n  var typeNames = Object.keys(__assign(__assign({}, schema.getTypeMap()), resolvers));\n  var extendedResolvers = {};\n  typeNames.forEach(function (typeName) {\n    var typeResolvers = resolvers[typeName];\n    var type = schema.getType(typeName);\n    if (type instanceof graphql_1.GraphQLObjectType) {\n      var interfaceResolvers = type.getInterfaces().map(function (iFace) {\n        return resolvers[iFace.name];\n      });\n      extendedResolvers[typeName] = Object.assign.apply(Object, __spreadArrays([{}], interfaceResolvers, [typeResolvers]));\n    } else {\n      if (typeResolvers) {\n        extendedResolvers[typeName] = typeResolvers;\n      }\n    }\n  });\n  return extendedResolvers;\n}\nexports.default = extendResolversFromInterfaces;","map":{"version":3,"names":["graphql_1","require","extendResolversFromInterfaces","schema","resolvers","typeNames","Object","keys","__assign","getTypeMap","extendedResolvers","forEach","typeName","typeResolvers","type","getType","GraphQLObjectType","interfaceResolvers","getInterfaces","map","iFace","name","assign","apply","__spreadArrays","exports","default"],"sources":["../../src/generate/extendResolversFromInterfaces.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;AAAA,IAAAA,SAAA,GAAAC,OAAA;AAIA,SAASC,6BAA6BA,CACpCC,MAAqB,EACrBC,SAAqB;EAErB,IAAMC,SAAS,GAAGC,MAAM,CAACC,IAAI,CAAAC,QAAA,CAAAA,QAAA,KACxBL,MAAM,CAACM,UAAU,EAAE,GACnBL,SAAS,EACZ;EAEF,IAAMM,iBAAiB,GAAe,EAAE;EACxCL,SAAS,CAACM,OAAO,CAAC,UAAAC,QAAQ;IACxB,IAAMC,aAAa,GAAGT,SAAS,CAACQ,QAAQ,CAAC;IACzC,IAAME,IAAI,GAAGX,MAAM,CAACY,OAAO,CAACH,QAAQ,CAAC;IACrC,IAAIE,IAAI,YAAYd,SAAA,CAAAgB,iBAAiB,EAAE;MACrC,IAAMC,kBAAkB,GAAGH,IAAI,CAC5BI,aAAa,EAAE,CACfC,GAAG,CAAC,UAAAC,KAAK;QAAI,OAAAhB,SAAS,CAACgB,KAAK,CAACC,IAAI,CAAC;MAArB,CAAqB,CAAC;MACtCX,iBAAiB,CAACE,QAAQ,CAAC,GAAGN,MAAM,CAACgB,MAAM,CAAAC,KAAA,CAAbjB,MAAM,EAAAkB,cAAA,EAClC,EAAE,GACCP,kBAAkB,GACrBJ,aAAa,GACd;KACF,MAAM;MACL,IAAIA,aAAa,EAAE;QACjBH,iBAAiB,CAACE,QAAQ,CAAC,GAAGC,aAAa;;;EAGjD,CAAC,CAAC;EAEF,OAAOH,iBAAiB;AAC1B;AAEAe,OAAA,CAAAC,OAAA,GAAexB,6BAA6B"},"metadata":{},"sourceType":"script","externalDependencies":[]}