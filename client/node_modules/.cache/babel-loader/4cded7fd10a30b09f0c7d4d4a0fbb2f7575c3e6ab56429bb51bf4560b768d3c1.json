{"ast":null,"code":"var __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction applySchemaTransforms(originalSchema, transforms) {\n  return transforms.reduce(function (schema, transform) {\n    return transform.transformSchema ? transform.transformSchema(schema) : schema;\n  }, originalSchema);\n}\nexports.applySchemaTransforms = applySchemaTransforms;\nfunction applyRequestTransforms(originalRequest, transforms) {\n  return transforms.reduce(function (request, transform) {\n    return transform.transformRequest ? transform.transformRequest(request) : request;\n  }, originalRequest);\n}\nexports.applyRequestTransforms = applyRequestTransforms;\nfunction applyResultTransforms(originalResult, transforms) {\n  return transforms.reduce(function (result, transform) {\n    return transform.transformResult ? transform.transformResult(result) : result;\n  }, originalResult);\n}\nexports.applyResultTransforms = applyResultTransforms;\nfunction composeTransforms() {\n  var transforms = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    transforms[_i] = arguments[_i];\n  }\n  var reverseTransforms = __spreadArrays(transforms).reverse();\n  return {\n    transformSchema: function (originalSchema) {\n      return applySchemaTransforms(originalSchema, transforms);\n    },\n    transformRequest: function (originalRequest) {\n      return applyRequestTransforms(originalRequest, reverseTransforms);\n    },\n    transformResult: function (result) {\n      return applyResultTransforms(result, reverseTransforms);\n    }\n  };\n}\nexports.composeTransforms = composeTransforms;","map":{"version":3,"names":["applySchemaTransforms","originalSchema","transforms","reduce","schema","transform","transformSchema","exports","applyRequestTransforms","originalRequest","request","transformRequest","applyResultTransforms","originalResult","result","transformResult","composeTransforms","_i","arguments","length","reverseTransforms","__spreadArrays","reverse"],"sources":["../../src/transforms/transforms.ts"],"sourcesContent":[null],"mappings":";;;;;;;;AAKA,SAAgBA,qBAAqBA,CACnCC,cAA6B,EAC7BC,UAA4B;EAE5B,OAAOA,UAAU,CAACC,MAAM,CACtB,UAACC,MAAqB,EAAEC,SAAoB;IAC1C,OAAAA,SAAS,CAACC,eAAe,GAAGD,SAAS,CAACC,eAAe,CAACF,MAAM,CAAC,GAAGA,MAAM;EAAtE,CAAsE,EACxEH,cAAc,CACf;AACH;AATAM,OAAA,CAAAP,qBAAA,GAAAA,qBAAA;AAWA,SAAgBQ,sBAAsBA,CACpCC,eAAwB,EACxBP,UAA4B;EAE5B,OAAOA,UAAU,CAACC,MAAM,CACtB,UAACO,OAAgB,EAAEL,SAAoB;IACrC,OAAAA,SAAS,CAACM,gBAAgB,GACtBN,SAAS,CAACM,gBAAgB,CAACD,OAAO,CAAC,GACnCA,OAAO;EAFX,CAEW,EAEbD,eAAe,CAChB;AACH;AAZAF,OAAA,CAAAC,sBAAA,GAAAA,sBAAA;AAcA,SAAgBI,qBAAqBA,CACnCC,cAAmB,EACnBX,UAA4B;EAE5B,OAAOA,UAAU,CAACC,MAAM,CACtB,UAACW,MAAW,EAAET,SAAoB;IAChC,OAAAA,SAAS,CAACU,eAAe,GAAGV,SAAS,CAACU,eAAe,CAACD,MAAM,CAAC,GAAGA,MAAM;EAAtE,CAAsE,EACxED,cAAc,CACf;AACH;AATAN,OAAA,CAAAK,qBAAA,GAAAA,qBAAA;AAWA,SAAgBI,iBAAiBA,CAAA;EAAC,IAAAd,UAAA;OAAA,IAAAe,EAAA,IAA+B,EAA/BA,EAAA,GAAAC,SAAA,CAAAC,MAA+B,EAA/BF,EAAA,EAA+B;IAA/Bf,UAAA,CAAAe,EAAA,IAAAC,SAAA,CAAAD,EAAA;;EAChC,IAAMG,iBAAiB,GAAGC,cAAA,CAAInB,UAAU,EAAEoB,OAAO,EAAE;EACnD,OAAO;IACLhB,eAAe,EAAf,SAAAA,CAAgBL,cAA6B;MAC3C,OAAOD,qBAAqB,CAACC,cAAc,EAAEC,UAAU,CAAC;IAC1D,CAAC;IACDS,gBAAgB,EAAhB,SAAAA,CAAiBF,eAAwB;MACvC,OAAOD,sBAAsB,CAACC,eAAe,EAAEW,iBAAiB,CAAC;IACnE,CAAC;IACDL,eAAe,EAAf,SAAAA,CAAgBD,MAAc;MAC5B,OAAOF,qBAAqB,CAACE,MAAM,EAAEM,iBAAiB,CAAC;IACzD;GACD;AACH;AAbAb,OAAA,CAAAS,iBAAA,GAAAA,iBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}