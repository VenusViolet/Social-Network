{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasPersistedQueryError = exports.formatApolloErrors = exports.UserInputError = exports.PersistedQueryNotSupportedError = exports.PersistedQueryNotFoundError = exports.ForbiddenError = exports.AuthenticationError = exports.ValidationError = exports.SyntaxError = exports.fromGraphQLError = exports.toApolloError = exports.ApolloError = void 0;\nconst graphql_1 = require(\"graphql\");\nclass ApolloError extends Error {\n  constructor(message, code, extensions) {\n    super(message);\n    if (extensions) {\n      Object.keys(extensions).filter(keyName => keyName !== 'message' && keyName !== 'extensions').forEach(key => {\n        this[key] = extensions[key];\n      });\n    }\n    if (!this.name) {\n      Object.defineProperty(this, 'name', {\n        value: 'ApolloError'\n      });\n    }\n    const userProvidedExtensions = extensions && extensions.extensions || null;\n    this.extensions = Object.assign(Object.assign(Object.assign({}, extensions), userProvidedExtensions), {\n      code\n    });\n  }\n}\nexports.ApolloError = ApolloError;\nfunction enrichError(error) {\n  let debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const expanded = Object.create(Object.getPrototypeOf(error), {\n    name: {\n      value: error.name\n    },\n    message: {\n      value: error.message,\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      value: error.locations || undefined,\n      enumerable: true\n    },\n    path: {\n      value: error.path || undefined,\n      enumerable: true\n    },\n    nodes: {\n      value: error.nodes || undefined\n    },\n    source: {\n      value: error.source || undefined\n    },\n    positions: {\n      value: error.positions || undefined\n    },\n    originalError: {\n      value: error.originalError\n    }\n  });\n  expanded.extensions = Object.assign(Object.assign({}, error.extensions), {\n    code: error.extensions && error.extensions.code || 'INTERNAL_SERVER_ERROR',\n    exception: Object.assign(Object.assign({}, error.extensions && error.extensions.exception), error.originalError)\n  });\n  delete expanded.extensions.exception.extensions;\n  if (debug && !expanded.extensions.exception.stacktrace) {\n    expanded.extensions.exception.stacktrace = error.originalError && error.originalError.stack && error.originalError.stack.split('\\n') || error.stack && error.stack.split('\\n');\n  }\n  if (Object.keys(expanded.extensions.exception).length === 0) {\n    delete expanded.extensions.exception;\n  }\n  return expanded;\n}\nfunction toApolloError(error) {\n  let code = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'INTERNAL_SERVER_ERROR';\n  let err = error;\n  if (err.extensions) {\n    err.extensions.code = code;\n  } else {\n    err.extensions = {\n      code\n    };\n  }\n  return err;\n}\nexports.toApolloError = toApolloError;\nfunction fromGraphQLError(error, options) {\n  const copy = options && options.errorClass ? new options.errorClass(error.message) : new ApolloError(error.message);\n  Object.keys(error).forEach(key => {\n    copy[key] = error[key];\n  });\n  copy.extensions = Object.assign(Object.assign({}, copy.extensions), error.extensions);\n  if (!copy.extensions.code) {\n    copy.extensions.code = options && options.code || 'INTERNAL_SERVER_ERROR';\n  }\n  Object.defineProperty(copy, 'originalError', {\n    value: {}\n  });\n  Object.getOwnPropertyNames(error).forEach(key => {\n    Object.defineProperty(copy.originalError, key, {\n      value: error[key]\n    });\n  });\n  return copy;\n}\nexports.fromGraphQLError = fromGraphQLError;\nclass SyntaxError extends ApolloError {\n  constructor(message) {\n    super(message, 'GRAPHQL_PARSE_FAILED');\n    Object.defineProperty(this, 'name', {\n      value: 'SyntaxError'\n    });\n  }\n}\nexports.SyntaxError = SyntaxError;\nclass ValidationError extends ApolloError {\n  constructor(message) {\n    super(message, 'GRAPHQL_VALIDATION_FAILED');\n    Object.defineProperty(this, 'name', {\n      value: 'ValidationError'\n    });\n  }\n}\nexports.ValidationError = ValidationError;\nclass AuthenticationError extends ApolloError {\n  constructor(message) {\n    super(message, 'UNAUTHENTICATED');\n    Object.defineProperty(this, 'name', {\n      value: 'AuthenticationError'\n    });\n  }\n}\nexports.AuthenticationError = AuthenticationError;\nclass ForbiddenError extends ApolloError {\n  constructor(message) {\n    super(message, 'FORBIDDEN');\n    Object.defineProperty(this, 'name', {\n      value: 'ForbiddenError'\n    });\n  }\n}\nexports.ForbiddenError = ForbiddenError;\nclass PersistedQueryNotFoundError extends ApolloError {\n  constructor() {\n    super('PersistedQueryNotFound', 'PERSISTED_QUERY_NOT_FOUND');\n    Object.defineProperty(this, 'name', {\n      value: 'PersistedQueryNotFoundError'\n    });\n  }\n}\nexports.PersistedQueryNotFoundError = PersistedQueryNotFoundError;\nclass PersistedQueryNotSupportedError extends ApolloError {\n  constructor() {\n    super('PersistedQueryNotSupported', 'PERSISTED_QUERY_NOT_SUPPORTED');\n    Object.defineProperty(this, 'name', {\n      value: 'PersistedQueryNotSupportedError'\n    });\n  }\n}\nexports.PersistedQueryNotSupportedError = PersistedQueryNotSupportedError;\nclass UserInputError extends ApolloError {\n  constructor(message, properties) {\n    super(message, 'BAD_USER_INPUT', properties);\n    Object.defineProperty(this, 'name', {\n      value: 'UserInputError'\n    });\n  }\n}\nexports.UserInputError = UserInputError;\nfunction formatApolloErrors(errors, options) {\n  if (!options) {\n    return errors.map(error => enrichError(error));\n  }\n  const {\n    formatter,\n    debug\n  } = options;\n  const enrichedErrors = errors.map(error => enrichError(error, debug));\n  const makePrintable = error => {\n    if (error instanceof Error) {\n      const graphQLError = error;\n      return Object.assign(Object.assign(Object.assign({\n        message: graphQLError.message\n      }, graphQLError.locations && {\n        locations: graphQLError.locations\n      }), graphQLError.path && {\n        path: graphQLError.path\n      }), graphQLError.extensions && {\n        extensions: graphQLError.extensions\n      });\n    }\n    return error;\n  };\n  if (!formatter) {\n    return enrichedErrors;\n  }\n  return enrichedErrors.map(error => {\n    try {\n      return makePrintable(formatter(error));\n    } catch (err) {\n      if (debug) {\n        return enrichError(err, debug);\n      } else {\n        const newError = fromGraphQLError(new graphql_1.GraphQLError('Internal server error'));\n        return enrichError(newError, debug);\n      }\n    }\n  });\n}\nexports.formatApolloErrors = formatApolloErrors;\nfunction hasPersistedQueryError(errors) {\n  return Array.isArray(errors) ? errors.some(error => error instanceof PersistedQueryNotFoundError || error instanceof PersistedQueryNotSupportedError) : false;\n}\nexports.hasPersistedQueryError = hasPersistedQueryError;","map":{"version":3,"names":["graphql_1","require","ApolloError","Error","constructor","message","code","extensions","Object","keys","filter","keyName","forEach","key","name","defineProperty","value","userProvidedExtensions","assign","exports","enrichError","error","debug","arguments","length","undefined","expanded","create","getPrototypeOf","enumerable","writable","locations","path","nodes","source","positions","originalError","exception","stacktrace","stack","split","toApolloError","err","fromGraphQLError","options","copy","errorClass","getOwnPropertyNames","SyntaxError","ValidationError","AuthenticationError","ForbiddenError","PersistedQueryNotFoundError","PersistedQueryNotSupportedError","UserInputError","properties","formatApolloErrors","errors","map","formatter","enrichedErrors","makePrintable","graphQLError","newError","GraphQLError","hasPersistedQueryError","Array","isArray","some"],"sources":["/Users/venusrodin/node_modules/apollo-server-errors/src/index.ts"],"sourcesContent":["import { GraphQLError, GraphQLFormattedError } from 'graphql';\n\nexport class ApolloError extends Error implements GraphQLError {\n  public extensions: Record<string, any>;\n  readonly name;\n  readonly locations;\n  readonly path;\n  readonly source;\n  readonly positions;\n  readonly nodes;\n  public originalError;\n\n  [key: string]: any;\n\n  constructor(\n    message: string,\n    code?: string,\n    extensions?: Record<string, any>,\n  ) {\n    super(message);\n\n    // This variable was previously named `properties`, which allowed users to set\n    // arbitrary properties on the ApolloError object. This use case is still supported,\n    // but deprecated in favor of using the ApolloError.extensions object instead.\n    // This change intends to comply with the GraphQL spec on errors. See:\n    // https://github.com/graphql/graphql-spec/blob/master/spec/Section%207%20--%20Response.md#response-format\n    //\n    // Going forward, users should use the ApolloError.extensions object for storing\n    // and reading arbitrary data on an error, as arbitrary properties on the ApolloError\n    // itself won't be supported in the future.\n    //\n    // XXX Filter 'message' and 'extensions' specifically so they don't overwrite the class property.\n    // We _could_ filter all of the class properties, but have chosen to only do\n    // so if it's an issue for other users. Please feel free to open an issue if you\n    // find yourself here with this exact problem.\n    if (extensions) {\n      Object.keys(extensions)\n        .filter(keyName => keyName !== 'message' && keyName !== 'extensions')\n        .forEach(key => {\n          this[key] = extensions[key];\n        });\n    }\n\n    // if no name provided, use the default. defineProperty ensures that it stays non-enumerable\n    if (!this.name) {\n      Object.defineProperty(this, 'name', { value: 'ApolloError' });\n    }\n\n    // Before the mentioned change to extensions, users could previously set the extensions\n    // object by providing it as a key on the third argument to the constructor.\n    // This step provides backwards compatibility for those hypothetical users.\n    const userProvidedExtensions = (extensions && extensions.extensions) || null;\n\n    this.extensions = { ...extensions, ...userProvidedExtensions, code };\n  }\n}\n\nfunction enrichError(error: Partial<GraphQLError>, debug: boolean = false) {\n  // follows similar structure to https://github.com/graphql/graphql-js/blob/master/src/error/GraphQLError.js#L145-L193\n  // with the addition of name\n  const expanded = Object.create(Object.getPrototypeOf(error), {\n    name: {\n      value: error.name,\n    },\n    message: {\n      value: error.message,\n      enumerable: true,\n      writable: true,\n    },\n    locations: {\n      value: error.locations || undefined,\n      enumerable: true,\n    },\n    path: {\n      value: error.path || undefined,\n      enumerable: true,\n    },\n    nodes: {\n      value: error.nodes || undefined,\n    },\n    source: {\n      value: error.source || undefined,\n    },\n    positions: {\n      value: error.positions || undefined,\n    },\n    originalError: {\n      value: error.originalError,\n    },\n  });\n\n  expanded.extensions = {\n    ...error.extensions,\n    code:\n      (error.extensions && error.extensions.code) || 'INTERNAL_SERVER_ERROR',\n    exception: {\n      ...(error.extensions && error.extensions.exception),\n      ...(error.originalError as any),\n    },\n  };\n\n  // ensure that extensions is not taken from the originalError\n  // graphql-js ensures that the originalError's extensions are hoisted\n  // https://github.com/graphql/graphql-js/blob/0bb47b2/src/error/GraphQLError.js#L138\n  delete expanded.extensions.exception.extensions;\n  if (debug && !expanded.extensions.exception.stacktrace) {\n    expanded.extensions.exception.stacktrace =\n      (error.originalError &&\n        error.originalError.stack &&\n        error.originalError.stack.split('\\n')) ||\n      (error.stack && error.stack.split('\\n'));\n  }\n\n  if (Object.keys(expanded.extensions.exception).length === 0) {\n    // remove from printing an empty object\n    delete expanded.extensions.exception;\n  }\n\n  return expanded as ApolloError;\n}\n\nexport function toApolloError(\n  error: Error & { extensions?: Record<string, any> },\n  code: string = 'INTERNAL_SERVER_ERROR',\n): Error & { extensions: Record<string, any> } {\n  let err = error;\n  if (err.extensions) {\n    err.extensions.code = code;\n  } else {\n    err.extensions = { code };\n  }\n  return err as Error & { extensions: Record<string, any> };\n}\n\nexport interface ErrorOptions {\n  code?: string;\n  // This declaration means it takes any \"class\" that has a constructor that\n  // takes a single string, and should be invoked via the `new` operator.\n  errorClass?: new (message: string) => ApolloError;\n}\n\nexport function fromGraphQLError(error: GraphQLError, options?: ErrorOptions) {\n  const copy: ApolloError =\n    options && options.errorClass\n      ? new options.errorClass(error.message)\n      : new ApolloError(error.message);\n\n  // copy enumerable keys\n  Object.keys(error).forEach(key => {\n    copy[key] = error[key];\n  });\n\n  // extensions are non enumerable, so copy them directly\n  copy.extensions = {\n    ...copy.extensions,\n    ...error.extensions,\n  };\n\n  // Fallback on default for code\n  if (!copy.extensions.code) {\n    copy.extensions.code = (options && options.code) || 'INTERNAL_SERVER_ERROR';\n  }\n\n  // copy the original error, while keeping all values non-enumerable, so they\n  // are not printed unless directly referenced\n  Object.defineProperty(copy, 'originalError', { value: {} });\n  Object.getOwnPropertyNames(error).forEach(key => {\n    Object.defineProperty(copy.originalError, key, { value: error[key] });\n  });\n\n  return copy;\n}\n\nexport class SyntaxError extends ApolloError {\n  constructor(message: string) {\n    super(message, 'GRAPHQL_PARSE_FAILED');\n\n    Object.defineProperty(this, 'name', { value: 'SyntaxError' });\n  }\n}\n\nexport class ValidationError extends ApolloError {\n  constructor(message: string) {\n    super(message, 'GRAPHQL_VALIDATION_FAILED');\n\n    Object.defineProperty(this, 'name', { value: 'ValidationError' });\n  }\n}\n\nexport class AuthenticationError extends ApolloError {\n  constructor(message: string) {\n    super(message, 'UNAUTHENTICATED');\n\n    Object.defineProperty(this, 'name', { value: 'AuthenticationError' });\n  }\n}\n\nexport class ForbiddenError extends ApolloError {\n  constructor(message: string) {\n    super(message, 'FORBIDDEN');\n\n    Object.defineProperty(this, 'name', { value: 'ForbiddenError' });\n  }\n}\n\nexport class PersistedQueryNotFoundError extends ApolloError {\n  constructor() {\n    super('PersistedQueryNotFound', 'PERSISTED_QUERY_NOT_FOUND');\n\n    Object.defineProperty(this, 'name', {\n      value: 'PersistedQueryNotFoundError',\n    });\n  }\n}\n\nexport class PersistedQueryNotSupportedError extends ApolloError {\n  constructor() {\n    super('PersistedQueryNotSupported', 'PERSISTED_QUERY_NOT_SUPPORTED');\n\n    Object.defineProperty(this, 'name', {\n      value: 'PersistedQueryNotSupportedError',\n    });\n  }\n}\n\nexport class UserInputError extends ApolloError {\n  constructor(message: string, properties?: Record<string, any>) {\n    super(message, 'BAD_USER_INPUT', properties);\n\n    Object.defineProperty(this, 'name', { value: 'UserInputError' });\n  }\n}\n\nexport function formatApolloErrors(\n  errors: ReadonlyArray<Error>,\n  options?: {\n    formatter?: (error: GraphQLError) => GraphQLFormattedError;\n    debug?: boolean;\n  },\n): Array<ApolloError> {\n  if (!options) {\n    return errors.map(error => enrichError(error));\n  }\n  const { formatter, debug } = options;\n\n  // Errors that occur in graphql-tools can contain an errors array that contains the errors thrown in a merged schema\n  // https://github.com/apollographql/graphql-tools/blob/3d53986ca/src/stitching/errors.ts#L104-L107\n  //\n  // They are are wrapped in an extra GraphQL error\n  // https://github.com/apollographql/graphql-tools/blob/3d53986ca/src/stitching/errors.ts#L109-L113\n  // which calls:\n  // https://github.com/graphql/graphql-js/blob/0a30b62964/src/error/locatedError.js#L18-L37\n  // Some processing for these nested errors could be done here:\n  //\n  // if (Array.isArray((error as any).errors)) {\n  //   (error as any).errors.forEach(e => flattenedErrors.push(e));\n  // } else if (\n  //   (error as any).originalError &&\n  //   Array.isArray((error as any).originalError.errors)\n  // ) {\n  //   (error as any).originalError.errors.forEach(e => flattenedErrors.push(e));\n  // } else {\n  //   flattenedErrors.push(error);\n  // }\n\n  const enrichedErrors = errors.map(error => enrichError(error, debug));\n  const makePrintable = error => {\n    if (error instanceof Error) {\n      // Error defines its `message` and other fields as non-enumerable, meaning JSON.stringigfy does not print them.\n      const graphQLError = error as GraphQLFormattedError;\n      return {\n        message: graphQLError.message,\n        ...(graphQLError.locations && { locations: graphQLError.locations }),\n        ...(graphQLError.path && { path: graphQLError.path }),\n        ...(graphQLError.extensions && { extensions: graphQLError.extensions }),\n      };\n    }\n    return error;\n  };\n\n  if (!formatter) {\n    return enrichedErrors;\n  }\n\n  return enrichedErrors.map(error => {\n    try {\n      return makePrintable(formatter(error));\n    } catch (err) {\n      if (debug) {\n        return enrichError(err, debug);\n      } else {\n        // obscure error\n        const newError = fromGraphQLError(\n          new GraphQLError('Internal server error'),\n        );\n        return enrichError(newError, debug);\n      }\n    }\n  }) as Array<ApolloError>;\n}\n\nexport function hasPersistedQueryError(errors: Array<Error>): boolean {\n  return Array.isArray(errors)\n    ? errors.some(\n        error =>\n          error instanceof PersistedQueryNotFoundError ||\n          error instanceof PersistedQueryNotSupportedError,\n      )\n    : false;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}