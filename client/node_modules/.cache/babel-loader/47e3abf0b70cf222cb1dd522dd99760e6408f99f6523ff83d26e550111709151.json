{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar graphql_1 = require(\"graphql\");\nvar ExtractField = /** @class */function () {\n  function ExtractField(_a) {\n    var from = _a.from,\n      to = _a.to;\n    this.from = from;\n    this.to = to;\n  }\n  ExtractField.prototype.transformRequest = function (originalRequest) {\n    var _a, _b;\n    var fromSelection;\n    var ourPathFrom = JSON.stringify(this.from);\n    var ourPathTo = JSON.stringify(this.to);\n    var fieldPath = [];\n    graphql_1.visit(originalRequest.document, (_a = {}, _a[graphql_1.Kind.FIELD] = {\n      enter: function (node) {\n        fieldPath.push(node.name.value);\n        if (ourPathFrom === JSON.stringify(fieldPath)) {\n          fromSelection = node.selectionSet;\n          return graphql_1.BREAK;\n        }\n      },\n      leave: function (node) {\n        fieldPath.pop();\n      }\n    }, _a));\n    fieldPath = [];\n    var newDocument = graphql_1.visit(originalRequest.document, (_b = {}, _b[graphql_1.Kind.FIELD] = {\n      enter: function (node) {\n        fieldPath.push(node.name.value);\n        if (ourPathTo === JSON.stringify(fieldPath) && fromSelection) {\n          return __assign(__assign({}, node), {\n            selectionSet: fromSelection\n          });\n        }\n      },\n      leave: function (node) {\n        fieldPath.pop();\n      }\n    }, _b));\n    return __assign(__assign({}, originalRequest), {\n      document: newDocument\n    });\n  };\n  return ExtractField;\n}();\nexports.default = ExtractField;","map":{"version":3,"names":["graphql_1","require","ExtractField","_a","from","to","prototype","transformRequest","originalRequest","fromSelection","ourPathFrom","JSON","stringify","ourPathTo","fieldPath","visit","document","Kind","FIELD","enter","node","push","name","value","selectionSet","BREAK","leave","pop","newDocument","_b","__assign"],"sources":["../../src/transforms/ExtractField.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;AAAA,IAAAA,SAAA,GAAAC,OAAA;AAGA,IAAAC,YAAA;EAIE,SAAAA,aAAYC,EAAwD;QAAtDC,IAAA,GAAAD,EAAA,CAAAC,IAAI;MAAEC,EAAA,GAAAF,EAAA,CAAAE,EAAE;IACpB,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,EAAE,GAAGA,EAAE;EACd;EAEOH,YAAA,CAAAI,SAAA,CAAAC,gBAAgB,GAAvB,UAAwBC,eAAwB;;IAC9C,IAAIC,aAA+B;IACnC,IAAMC,WAAW,GAAGC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACR,IAAI,CAAC;IAC7C,IAAMS,SAAS,GAAGF,IAAI,CAACC,SAAS,CAAC,IAAI,CAACP,EAAE,CAAC;IACzC,IAAIS,SAAS,GAAkB,EAAE;IACjCd,SAAA,CAAAe,KAAK,CAACP,eAAe,CAACQ,QAAQ,GAAAb,EAAA,OAC5BA,EAAA,CAACH,SAAA,CAAAiB,IAAI,CAACC,KAAK,IAAG;MACZC,KAAK,EAAE,SAAAA,CAACC,IAAe;QACrBN,SAAS,CAACO,IAAI,CAACD,IAAI,CAACE,IAAI,CAACC,KAAK,CAAC;QAC/B,IAAIb,WAAW,KAAKC,IAAI,CAACC,SAAS,CAACE,SAAS,CAAC,EAAE;UAC7CL,aAAa,GAAGW,IAAI,CAACI,YAAY;UACjC,OAAOxB,SAAA,CAAAyB,KAAK;;MAEhB,CAAC;MACDC,KAAK,EAAE,SAAAA,CAACN,IAAe;QACrBN,SAAS,CAACa,GAAG,EAAE;MACjB;KACD,E,IACD;IAEFb,SAAS,GAAG,EAAE;IACd,IAAMc,WAAW,GAAG5B,SAAA,CAAAe,KAAK,CAACP,eAAe,CAACQ,QAAQ,GAAAa,EAAA,OAChDA,EAAA,CAAC7B,SAAA,CAAAiB,IAAI,CAACC,KAAK,IAAG;MACZC,KAAK,EAAE,SAAAA,CAACC,IAAe;QACrBN,SAAS,CAACO,IAAI,CAACD,IAAI,CAACE,IAAI,CAACC,KAAK,CAAC;QAC/B,IAAIV,SAAS,KAAKF,IAAI,CAACC,SAAS,CAACE,SAAS,CAAC,IAAIL,aAAa,EAAE;UAC5D,OAAAqB,QAAA,CAAAA,QAAA,KACKV,IAAI;YACPI,YAAY,EAAEf;UAAa;;MAGjC,CAAC;MACDiB,KAAK,EAAE,SAAAA,CAACN,IAAe;QACrBN,SAAS,CAACa,GAAG,EAAE;MACjB;KACD,E,IACD;IACF,OAAAG,QAAA,CAAAA,QAAA,KACKtB,eAAe;MAClBQ,QAAQ,EAAEY;IAAW;EAEzB,CAAC;EACH,OAAA1B,YAAC;AAAD,CAAC,EAnDD"},"metadata":{},"sourceType":"script","externalDependencies":[]}