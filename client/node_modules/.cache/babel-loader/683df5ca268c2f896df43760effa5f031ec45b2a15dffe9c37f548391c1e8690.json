{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar graphql_1 = require(\"graphql\");\nfunction forEachField(schema, fn) {\n  var typeMap = schema.getTypeMap();\n  Object.keys(typeMap).forEach(function (typeName) {\n    var type = typeMap[typeName];\n    // TODO: maybe have an option to include these?\n    if (!graphql_1.getNamedType(type).name.startsWith('__') && type instanceof graphql_1.GraphQLObjectType) {\n      var fields_1 = type.getFields();\n      Object.keys(fields_1).forEach(function (fieldName) {\n        var field = fields_1[fieldName];\n        fn(field, typeName, fieldName);\n      });\n    }\n  });\n}\nexports.default = forEachField;","map":{"version":3,"names":["graphql_1","require","forEachField","schema","fn","typeMap","getTypeMap","Object","keys","forEach","typeName","type","getNamedType","name","startsWith","GraphQLObjectType","fields_1","getFields","fieldName","field","exports","default"],"sources":["../../src/generate/forEachField.ts"],"sourcesContent":[null],"mappings":";;;AAAA,IAAAA,SAAA,GAAAC,OAAA;AAGA,SAASC,YAAYA,CAACC,MAAqB,EAAEC,EAAoB;EAC/D,IAAMC,OAAO,GAAGF,MAAM,CAACG,UAAU,EAAE;EACnCC,MAAM,CAACC,IAAI,CAACH,OAAO,CAAC,CAACI,OAAO,CAAC,UAAAC,QAAQ;IACnC,IAAMC,IAAI,GAAGN,OAAO,CAACK,QAAQ,CAAC;IAE9B;IACA,IACE,CAACV,SAAA,CAAAY,YAAY,CAACD,IAAI,CAAC,CAACE,IAAI,CAACC,UAAU,CAAC,IAAI,CAAC,IACzCH,IAAI,YAAYX,SAAA,CAAAe,iBAAiB,EACjC;MACA,IAAMC,QAAM,GAAGL,IAAI,CAACM,SAAS,EAAE;MAC/BV,MAAM,CAACC,IAAI,CAACQ,QAAM,CAAC,CAACP,OAAO,CAAC,UAAAS,SAAS;QACnC,IAAMC,KAAK,GAAGH,QAAM,CAACE,SAAS,CAAC;QAC/Bd,EAAE,CAACe,KAAK,EAAET,QAAQ,EAAEQ,SAAS,CAAC;MAChC,CAAC,CAAC;;EAEN,CAAC,CAAC;AACJ;AAEAE,OAAA,CAAAC,OAAA,GAAenB,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}