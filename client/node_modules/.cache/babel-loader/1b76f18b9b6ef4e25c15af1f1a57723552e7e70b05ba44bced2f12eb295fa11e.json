{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar graphql_1 = require(\"graphql\");\nvar isSpecifiedScalarType_1 = require(\"../isSpecifiedScalarType\");\nvar resolveFromParentTypename_1 = require(\"./resolveFromParentTypename\");\nvar defaultMergedResolver_1 = require(\"./defaultMergedResolver\");\nfunction recreateType(type, resolveType, keepResolvers) {\n  if (type instanceof graphql_1.GraphQLObjectType) {\n    var fields_1 = type.getFields();\n    var interfaces_1 = type.getInterfaces();\n    return new graphql_1.GraphQLObjectType({\n      name: type.name,\n      description: type.description,\n      astNode: type.astNode,\n      isTypeOf: keepResolvers ? type.isTypeOf : undefined,\n      fields: function () {\n        return fieldMapToFieldConfigMap(fields_1, resolveType, keepResolvers);\n      },\n      interfaces: function () {\n        return interfaces_1.map(function (iface) {\n          return resolveType(iface);\n        });\n      }\n    });\n  } else if (type instanceof graphql_1.GraphQLInterfaceType) {\n    var fields_2 = type.getFields();\n    return new graphql_1.GraphQLInterfaceType({\n      name: type.name,\n      description: type.description,\n      astNode: type.astNode,\n      fields: function () {\n        return fieldMapToFieldConfigMap(fields_2, resolveType, keepResolvers);\n      },\n      resolveType: keepResolvers ? type.resolveType : function (parent, context, info) {\n        return resolveFromParentTypename_1.default(parent, info.schema);\n      }\n    });\n  } else if (type instanceof graphql_1.GraphQLUnionType) {\n    return new graphql_1.GraphQLUnionType({\n      name: type.name,\n      description: type.description,\n      astNode: type.astNode,\n      types: function () {\n        return type.getTypes().map(function (unionMember) {\n          return resolveType(unionMember);\n        });\n      },\n      resolveType: keepResolvers ? type.resolveType : function (parent, context, info) {\n        return resolveFromParentTypename_1.default(parent, info.schema);\n      }\n    });\n  } else if (type instanceof graphql_1.GraphQLInputObjectType) {\n    return new graphql_1.GraphQLInputObjectType({\n      name: type.name,\n      description: type.description,\n      astNode: type.astNode,\n      fields: function () {\n        return inputFieldMapToFieldConfigMap(type.getFields(), resolveType);\n      }\n    });\n  } else if (type instanceof graphql_1.GraphQLEnumType) {\n    var values = type.getValues();\n    var newValues_1 = {};\n    values.forEach(function (value) {\n      newValues_1[value.name] = {\n        value: value.value,\n        deprecationReason: value.deprecationReason,\n        description: value.description,\n        astNode: value.astNode\n      };\n    });\n    return new graphql_1.GraphQLEnumType({\n      name: type.name,\n      description: type.description,\n      astNode: type.astNode,\n      values: newValues_1\n    });\n  } else if (type instanceof graphql_1.GraphQLScalarType) {\n    if (keepResolvers || isSpecifiedScalarType_1.default(type)) {\n      return type;\n    } else {\n      return new graphql_1.GraphQLScalarType({\n        name: type.name,\n        description: type.description,\n        astNode: type.astNode,\n        serialize: function (value) {\n          return value;\n        },\n        parseValue: function (value) {\n          return value;\n        },\n        parseLiteral: function (ast) {\n          return parseLiteral(ast);\n        }\n      });\n    }\n  } else {\n    throw new Error(\"Invalid type \" + type);\n  }\n}\nexports.recreateType = recreateType;\nfunction recreateDirective(directive, resolveType) {\n  return new graphql_1.GraphQLDirective({\n    name: directive.name,\n    description: directive.description,\n    locations: directive.locations,\n    args: argsToFieldConfigArgumentMap(directive.args, resolveType),\n    astNode: directive.astNode\n  });\n}\nexports.recreateDirective = recreateDirective;\nfunction parseLiteral(ast) {\n  switch (ast.kind) {\n    case graphql_1.Kind.STRING:\n    case graphql_1.Kind.BOOLEAN:\n      {\n        return ast.value;\n      }\n    case graphql_1.Kind.INT:\n    case graphql_1.Kind.FLOAT:\n      {\n        return parseFloat(ast.value);\n      }\n    case graphql_1.Kind.OBJECT:\n      {\n        var value_1 = Object.create(null);\n        ast.fields.forEach(function (field) {\n          value_1[field.name.value] = parseLiteral(field.value);\n        });\n        return value_1;\n      }\n    case graphql_1.Kind.LIST:\n      {\n        return ast.values.map(parseLiteral);\n      }\n    default:\n      return null;\n  }\n}\nfunction fieldMapToFieldConfigMap(fields, resolveType, keepResolvers) {\n  var result = {};\n  Object.keys(fields).forEach(function (name) {\n    var field = fields[name];\n    var type = resolveType(field.type);\n    if (type !== null) {\n      result[name] = fieldToFieldConfig(fields[name], resolveType, keepResolvers);\n    }\n  });\n  return result;\n}\nexports.fieldMapToFieldConfigMap = fieldMapToFieldConfigMap;\nfunction createResolveType(getType) {\n  var resolveType = function (type) {\n    if (type instanceof graphql_1.GraphQLList) {\n      var innerType = resolveType(type.ofType);\n      if (innerType === null) {\n        return null;\n      } else {\n        return new graphql_1.GraphQLList(innerType);\n      }\n    } else if (type instanceof graphql_1.GraphQLNonNull) {\n      var innerType = resolveType(type.ofType);\n      if (innerType === null) {\n        return null;\n      } else {\n        return new graphql_1.GraphQLNonNull(innerType);\n      }\n    } else if (graphql_1.isNamedType(type)) {\n      var typeName = graphql_1.getNamedType(type).name;\n      switch (typeName) {\n        case graphql_1.GraphQLInt.name:\n          return graphql_1.GraphQLInt;\n        case graphql_1.GraphQLFloat.name:\n          return graphql_1.GraphQLFloat;\n        case graphql_1.GraphQLString.name:\n          return graphql_1.GraphQLString;\n        case graphql_1.GraphQLBoolean.name:\n          return graphql_1.GraphQLBoolean;\n        case graphql_1.GraphQLID.name:\n          return graphql_1.GraphQLID;\n        default:\n          return getType(typeName, type);\n      }\n    } else {\n      return type;\n    }\n  };\n  return resolveType;\n}\nexports.createResolveType = createResolveType;\nfunction fieldToFieldConfig(field, resolveType, keepResolvers) {\n  return {\n    type: resolveType(field.type),\n    args: argsToFieldConfigArgumentMap(field.args, resolveType),\n    resolve: keepResolvers ? field.resolve : defaultMergedResolver_1.default,\n    subscribe: keepResolvers ? field.subscribe : null,\n    description: field.description,\n    deprecationReason: field.deprecationReason,\n    astNode: field.astNode\n  };\n}\nexports.fieldToFieldConfig = fieldToFieldConfig;\nfunction argsToFieldConfigArgumentMap(args, resolveType) {\n  var result = {};\n  args.forEach(function (arg) {\n    var newArg = argumentToArgumentConfig(arg, resolveType);\n    if (newArg) {\n      result[newArg[0]] = newArg[1];\n    }\n  });\n  return result;\n}\nexports.argsToFieldConfigArgumentMap = argsToFieldConfigArgumentMap;\nfunction argumentToArgumentConfig(argument, resolveType) {\n  var type = resolveType(argument.type);\n  if (type === null) {\n    return null;\n  } else {\n    return [argument.name, {\n      type: type,\n      defaultValue: argument.defaultValue,\n      description: argument.description\n    }];\n  }\n}\nexports.argumentToArgumentConfig = argumentToArgumentConfig;\nfunction inputFieldMapToFieldConfigMap(fields, resolveType) {\n  var result = {};\n  Object.keys(fields).forEach(function (name) {\n    var field = fields[name];\n    var type = resolveType(field.type);\n    if (type !== null) {\n      result[name] = inputFieldToFieldConfig(fields[name], resolveType);\n    }\n  });\n  return result;\n}\nexports.inputFieldMapToFieldConfigMap = inputFieldMapToFieldConfigMap;\nfunction inputFieldToFieldConfig(field, resolveType) {\n  return {\n    type: resolveType(field.type),\n    defaultValue: field.defaultValue,\n    description: field.description,\n    astNode: field.astNode\n  };\n}\nexports.inputFieldToFieldConfig = inputFieldToFieldConfig;","map":{"version":3,"names":["graphql_1","require","isSpecifiedScalarType_1","resolveFromParentTypename_1","defaultMergedResolver_1","recreateType","type","resolveType","keepResolvers","GraphQLObjectType","fields_1","getFields","interfaces_1","getInterfaces","name","description","astNode","isTypeOf","undefined","fields","fieldMapToFieldConfigMap","interfaces","map","iface","GraphQLInterfaceType","fields_2","parent","context","info","default","schema","GraphQLUnionType","types","getTypes","unionMember","GraphQLInputObjectType","inputFieldMapToFieldConfigMap","GraphQLEnumType","values","getValues","newValues_1","forEach","value","deprecationReason","GraphQLScalarType","serialize","parseValue","parseLiteral","ast","Error","exports","recreateDirective","directive","GraphQLDirective","locations","args","argsToFieldConfigArgumentMap","kind","Kind","STRING","BOOLEAN","INT","FLOAT","parseFloat","OBJECT","value_1","Object","create","field","LIST","result","keys","fieldToFieldConfig","createResolveType","getType","GraphQLList","innerType","ofType","GraphQLNonNull","isNamedType","typeName","getNamedType","GraphQLInt","GraphQLFloat","GraphQLString","GraphQLBoolean","GraphQLID","resolve","subscribe","arg","newArg","argumentToArgumentConfig","argument","defaultValue","inputFieldToFieldConfig"],"sources":["../../src/stitching/schemaRecreation.ts"],"sourcesContent":[null],"mappings":";;;AAAA,IAAAA,SAAA,GAAAC,OAAA;AAiCA,IAAAC,uBAAA,GAAAD,OAAA;AAEA,IAAAE,2BAAA,GAAAF,OAAA;AACA,IAAAG,uBAAA,GAAAH,OAAA;AAEA,SAAgBI,YAAYA,CAC1BC,IAAsB,EACtBC,WAA6B,EAC7BC,aAAsB;EAEtB,IAAIF,IAAI,YAAYN,SAAA,CAAAS,iBAAiB,EAAE;IACrC,IAAMC,QAAM,GAAGJ,IAAI,CAACK,SAAS,EAAE;IAC/B,IAAMC,YAAU,GAAGN,IAAI,CAACO,aAAa,EAAE;IAEvC,OAAO,IAAIb,SAAA,CAAAS,iBAAiB,CAAC;MAC3BK,IAAI,EAAER,IAAI,CAACQ,IAAI;MACfC,WAAW,EAAET,IAAI,CAACS,WAAW;MAC7BC,OAAO,EAAEV,IAAI,CAACU,OAAO;MACrBC,QAAQ,EAAET,aAAa,GAAGF,IAAI,CAACW,QAAQ,GAAGC,SAAS;MACnDC,MAAM,EAAE,SAAAA,CAAA;QACN,OAAAC,wBAAwB,CAACV,QAAM,EAAEH,WAAW,EAAEC,aAAa,CAAC;MAA5D,CAA4D;MAC9Da,UAAU,EAAE,SAAAA,CAAA;QAAM,OAAAT,YAAU,CAACU,GAAG,CAAC,UAAAC,KAAK;UAAI,OAAAhB,WAAW,CAACgB,KAAK,CAAC;QAAlB,CAAkB,CAAC;MAA3C;KACnB,CAAC;GACH,MAAM,IAAIjB,IAAI,YAAYN,SAAA,CAAAwB,oBAAoB,EAAE;IAC/C,IAAMC,QAAM,GAAGnB,IAAI,CAACK,SAAS,EAAE;IAE/B,OAAO,IAAIX,SAAA,CAAAwB,oBAAoB,CAAC;MAC9BV,IAAI,EAAER,IAAI,CAACQ,IAAI;MACfC,WAAW,EAAET,IAAI,CAACS,WAAW;MAC7BC,OAAO,EAAEV,IAAI,CAACU,OAAO;MACrBG,MAAM,EAAE,SAAAA,CAAA;QACN,OAAAC,wBAAwB,CAACK,QAAM,EAAElB,WAAW,EAAEC,aAAa,CAAC;MAA5D,CAA4D;MAC9DD,WAAW,EAAEC,aAAa,GACtBF,IAAI,CAACC,WAAW,GAChB,UAACmB,MAAM,EAAEC,OAAO,EAAEC,IAAI;QACpB,OAAAzB,2BAAA,CAAA0B,OAAyB,CAACH,MAAM,EAAEE,IAAI,CAACE,MAAM,CAAC;MAA9C;KACP,CAAC;GACH,MAAM,IAAIxB,IAAI,YAAYN,SAAA,CAAA+B,gBAAgB,EAAE;IAC3C,OAAO,IAAI/B,SAAA,CAAA+B,gBAAgB,CAAC;MAC1BjB,IAAI,EAAER,IAAI,CAACQ,IAAI;MACfC,WAAW,EAAET,IAAI,CAACS,WAAW;MAC7BC,OAAO,EAAEV,IAAI,CAACU,OAAO;MAErBgB,KAAK,EAAE,SAAAA,CAAA;QAAM,OAAA1B,IAAI,CAAC2B,QAAQ,EAAE,CAACX,GAAG,CAAC,UAAAY,WAAW;UAAI,OAAA3B,WAAW,CAAC2B,WAAW,CAAC;QAAxB,CAAwB,CAAC;MAA5D,CAA4D;MACzE3B,WAAW,EAAEC,aAAa,GACtBF,IAAI,CAACC,WAAW,GAChB,UAACmB,MAAM,EAAEC,OAAO,EAAEC,IAAI;QACpB,OAAAzB,2BAAA,CAAA0B,OAAyB,CAACH,MAAM,EAAEE,IAAI,CAACE,MAAM,CAAC;MAA9C;KACP,CAAC;GACH,MAAM,IAAIxB,IAAI,YAAYN,SAAA,CAAAmC,sBAAsB,EAAE;IACjD,OAAO,IAAInC,SAAA,CAAAmC,sBAAsB,CAAC;MAChCrB,IAAI,EAAER,IAAI,CAACQ,IAAI;MACfC,WAAW,EAAET,IAAI,CAACS,WAAW;MAC7BC,OAAO,EAAEV,IAAI,CAACU,OAAO;MAErBG,MAAM,EAAE,SAAAA,CAAA;QACN,OAAAiB,6BAA6B,CAAC9B,IAAI,CAACK,SAAS,EAAE,EAAEJ,WAAW,CAAC;MAA5D;KACH,CAAC;GACH,MAAM,IAAID,IAAI,YAAYN,SAAA,CAAAqC,eAAe,EAAE;IAC1C,IAAMC,MAAM,GAAGhC,IAAI,CAACiC,SAAS,EAAE;IAC/B,IAAMC,WAAS,GAAG,EAAE;IACpBF,MAAM,CAACG,OAAO,CAAC,UAAAC,KAAK;MAClBF,WAAS,CAACE,KAAK,CAAC5B,IAAI,CAAC,GAAG;QACtB4B,KAAK,EAAEA,KAAK,CAACA,KAAK;QAClBC,iBAAiB,EAAED,KAAK,CAACC,iBAAiB;QAC1C5B,WAAW,EAAE2B,KAAK,CAAC3B,WAAW;QAC9BC,OAAO,EAAE0B,KAAK,CAAC1B;OAChB;IACH,CAAC,CAAC;IACF,OAAO,IAAIhB,SAAA,CAAAqC,eAAe,CAAC;MACzBvB,IAAI,EAAER,IAAI,CAACQ,IAAI;MACfC,WAAW,EAAET,IAAI,CAACS,WAAW;MAC7BC,OAAO,EAAEV,IAAI,CAACU,OAAO;MACrBsB,MAAM,EAAEE;KACT,CAAC;GACH,MAAM,IAAIlC,IAAI,YAAYN,SAAA,CAAA4C,iBAAiB,EAAE;IAC5C,IAAIpC,aAAa,IAAIN,uBAAA,CAAA2B,OAAqB,CAACvB,IAAI,CAAC,EAAE;MAChD,OAAOA,IAAI;KACZ,MAAM;MACL,OAAO,IAAIN,SAAA,CAAA4C,iBAAiB,CAAC;QAC3B9B,IAAI,EAAER,IAAI,CAACQ,IAAI;QACfC,WAAW,EAAET,IAAI,CAACS,WAAW;QAC7BC,OAAO,EAAEV,IAAI,CAACU,OAAO;QACrB6B,SAAS,EAAT,SAAAA,CAAUH,KAAU;UAClB,OAAOA,KAAK;QACd,CAAC;QACDI,UAAU,EAAV,SAAAA,CAAWJ,KAAU;UACnB,OAAOA,KAAK;QACd,CAAC;QACDK,YAAY,EAAZ,SAAAA,CAAaC,GAAc;UACzB,OAAOD,YAAY,CAACC,GAAG,CAAC;QAC1B;OACD,CAAC;;GAEL,MAAM;IACL,MAAM,IAAIC,KAAK,CAAC,kBAAgB3C,IAAM,CAAC;;AAE3C;AA5FA4C,OAAA,CAAA7C,YAAA,GAAAA,YAAA;AA8FA,SAAgB8C,iBAAiBA,CAC/BC,SAA2B,EAC3B7C,WAA6B;EAE7B,OAAO,IAAIP,SAAA,CAAAqD,gBAAgB,CAAC;IAC1BvC,IAAI,EAAEsC,SAAS,CAACtC,IAAI;IACpBC,WAAW,EAAEqC,SAAS,CAACrC,WAAW;IAClCuC,SAAS,EAAEF,SAAS,CAACE,SAAS;IAC9BC,IAAI,EAAEC,4BAA4B,CAACJ,SAAS,CAACG,IAAI,EAAEhD,WAAW,CAAC;IAC/DS,OAAO,EAAEoC,SAAS,CAACpC;GACpB,CAAC;AACJ;AAXAkC,OAAA,CAAAC,iBAAA,GAAAA,iBAAA;AAaA,SAASJ,YAAYA,CAACC,GAAc;EAClC,QAAQA,GAAG,CAACS,IAAI;IACd,KAAKzD,SAAA,CAAA0D,IAAI,CAACC,MAAM;IAChB,KAAK3D,SAAA,CAAA0D,IAAI,CAACE,OAAO;MAAE;QACjB,OAAOZ,GAAG,CAACN,KAAK;;IAElB,KAAK1C,SAAA,CAAA0D,IAAI,CAACG,GAAG;IACb,KAAK7D,SAAA,CAAA0D,IAAI,CAACI,KAAK;MAAE;QACf,OAAOC,UAAU,CAACf,GAAG,CAACN,KAAK,CAAC;;IAE9B,KAAK1C,SAAA,CAAA0D,IAAI,CAACM,MAAM;MAAE;QAChB,IAAMC,OAAK,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;QACjCnB,GAAG,CAAC7B,MAAM,CAACsB,OAAO,CAAC,UAAA2B,KAAK;UACtBH,OAAK,CAACG,KAAK,CAACtD,IAAI,CAAC4B,KAAK,CAAC,GAAGK,YAAY,CAACqB,KAAK,CAAC1B,KAAK,CAAC;QACrD,CAAC,CAAC;QAEF,OAAOuB,OAAK;;IAEd,KAAKjE,SAAA,CAAA0D,IAAI,CAACW,IAAI;MAAE;QACd,OAAOrB,GAAG,CAACV,MAAM,CAAChB,GAAG,CAACyB,YAAY,CAAC;;IAErC;MACE,OAAO,IAAI;EAAC;AAElB;AAEA,SAAgB3B,wBAAwBA,CACtCD,MAAiC,EACjCZ,WAA6B,EAC7BC,aAAsB;EAEtB,IAAM8D,MAAM,GAAoC,EAAE;EAClDJ,MAAM,CAACK,IAAI,CAACpD,MAAM,CAAC,CAACsB,OAAO,CAAC,UAAA3B,IAAI;IAC9B,IAAMsD,KAAK,GAAGjD,MAAM,CAACL,IAAI,CAAC;IAC1B,IAAMR,IAAI,GAAGC,WAAW,CAAC6D,KAAK,CAAC9D,IAAI,CAAC;IACpC,IAAIA,IAAI,KAAK,IAAI,EAAE;MACjBgE,MAAM,CAACxD,IAAI,CAAC,GAAG0D,kBAAkB,CAC/BrD,MAAM,CAACL,IAAI,CAAC,EACZP,WAAW,EACXC,aAAa,CACd;;EAEL,CAAC,CAAC;EACF,OAAO8D,MAAM;AACf;AAlBApB,OAAA,CAAA9B,wBAAA,GAAAA,wBAAA;AAoBA,SAAgBqD,iBAAiBA,CAC/BC,OAAgE;EAEhE,IAAMnE,WAAW,GAAG,SAAAA,CAAwBD,IAAO;IACjD,IAAIA,IAAI,YAAYN,SAAA,CAAA2E,WAAW,EAAE;MAC/B,IAAMC,SAAS,GAAGrE,WAAW,CAACD,IAAI,CAACuE,MAAM,CAAC;MAC1C,IAAID,SAAS,KAAK,IAAI,EAAE;QACtB,OAAO,IAAI;OACZ,MAAM;QACL,OAAO,IAAI5E,SAAA,CAAA2E,WAAW,CAACC,SAAS,CAAM;;KAEzC,MAAM,IAAItE,IAAI,YAAYN,SAAA,CAAA8E,cAAc,EAAE;MACzC,IAAMF,SAAS,GAAGrE,WAAW,CAACD,IAAI,CAACuE,MAAM,CAAC;MAC1C,IAAID,SAAS,KAAK,IAAI,EAAE;QACtB,OAAO,IAAI;OACZ,MAAM;QACL,OAAO,IAAI5E,SAAA,CAAA8E,cAAc,CAACF,SAAS,CAAM;;KAE5C,MAAM,IAAI5E,SAAA,CAAA+E,WAAW,CAACzE,IAAI,CAAC,EAAE;MAC5B,IAAM0E,QAAQ,GAAGhF,SAAA,CAAAiF,YAAY,CAAC3E,IAAI,CAAC,CAACQ,IAAI;MACxC,QAAQkE,QAAQ;QACd,KAAKhF,SAAA,CAAAkF,UAAU,CAACpE,IAAI;UAClB,OAAOd,SAAA,CAAAkF,UAAU;QACnB,KAAKlF,SAAA,CAAAmF,YAAY,CAACrE,IAAI;UACpB,OAAOd,SAAA,CAAAmF,YAAY;QACrB,KAAKnF,SAAA,CAAAoF,aAAa,CAACtE,IAAI;UACrB,OAAOd,SAAA,CAAAoF,aAAa;QACtB,KAAKpF,SAAA,CAAAqF,cAAc,CAACvE,IAAI;UACtB,OAAOd,SAAA,CAAAqF,cAAc;QACvB,KAAKrF,SAAA,CAAAsF,SAAS,CAACxE,IAAI;UACjB,OAAOd,SAAA,CAAAsF,SAAS;QAClB;UACE,OAAOZ,OAAO,CAACM,QAAQ,EAAE1E,IAAI,CAAC;MAAC;KAEpC,MAAM;MACL,OAAOA,IAAI;;EAEf,CAAC;EACD,OAAOC,WAAW;AACpB;AAvCA2C,OAAA,CAAAuB,iBAAA,GAAAA,iBAAA;AAyCA,SAAgBD,kBAAkBA,CAChCJ,KAA6B,EAC7B7D,WAA6B,EAC7BC,aAAsB;EAEtB,OAAO;IACLF,IAAI,EAAEC,WAAW,CAAC6D,KAAK,CAAC9D,IAAI,CAAC;IAC7BiD,IAAI,EAAEC,4BAA4B,CAACY,KAAK,CAACb,IAAI,EAAEhD,WAAW,CAAC;IAC3DgF,OAAO,EAAE/E,aAAa,GAAG4D,KAAK,CAACmB,OAAO,GAAGnF,uBAAA,CAAAyB,OAAqB;IAC9D2D,SAAS,EAAEhF,aAAa,GAAG4D,KAAK,CAACoB,SAAS,GAAG,IAAI;IACjDzE,WAAW,EAAEqD,KAAK,CAACrD,WAAW;IAC9B4B,iBAAiB,EAAEyB,KAAK,CAACzB,iBAAiB;IAC1C3B,OAAO,EAAEoD,KAAK,CAACpD;GAChB;AACH;AAdAkC,OAAA,CAAAsB,kBAAA,GAAAA,kBAAA;AAgBA,SAAgBhB,4BAA4BA,CAC1CD,IAA4B,EAC5BhD,WAA6B;EAE7B,IAAM+D,MAAM,GAAkC,EAAE;EAChDf,IAAI,CAACd,OAAO,CAAC,UAAAgD,GAAG;IACd,IAAMC,MAAM,GAAGC,wBAAwB,CAACF,GAAG,EAAElF,WAAW,CAAC;IACzD,IAAImF,MAAM,EAAE;MACVpB,MAAM,CAACoB,MAAM,CAAC,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;;EAEjC,CAAC,CAAC;EACF,OAAOpB,MAAM;AACf;AAZApB,OAAA,CAAAM,4BAAA,GAAAA,4BAAA;AAcA,SAAgBmC,wBAAwBA,CACtCC,QAAyB,EACzBrF,WAA6B;EAE7B,IAAMD,IAAI,GAAGC,WAAW,CAACqF,QAAQ,CAACtF,IAAI,CAAC;EACvC,IAAIA,IAAI,KAAK,IAAI,EAAE;IACjB,OAAO,IAAI;GACZ,MAAM;IACL,OAAO,CACLsF,QAAQ,CAAC9E,IAAI,EACb;MACER,IAAI,EAAEA,IAAI;MACVuF,YAAY,EAAED,QAAQ,CAACC,YAAY;MACnC9E,WAAW,EAAE6E,QAAQ,CAAC7E;KACvB,CACF;;AAEL;AAjBAmC,OAAA,CAAAyC,wBAAA,GAAAA,wBAAA;AAmBA,SAAgBvD,6BAA6BA,CAC3CjB,MAA4B,EAC5BZ,WAA6B;EAE7B,IAAM+D,MAAM,GAA+B,EAAE;EAC7CJ,MAAM,CAACK,IAAI,CAACpD,MAAM,CAAC,CAACsB,OAAO,CAAC,UAAA3B,IAAI;IAC9B,IAAMsD,KAAK,GAAGjD,MAAM,CAACL,IAAI,CAAC;IAC1B,IAAMR,IAAI,GAAGC,WAAW,CAAC6D,KAAK,CAAC9D,IAAI,CAAC;IACpC,IAAIA,IAAI,KAAK,IAAI,EAAE;MACjBgE,MAAM,CAACxD,IAAI,CAAC,GAAGgF,uBAAuB,CAAC3E,MAAM,CAACL,IAAI,CAAC,EAAEP,WAAW,CAAC;;EAErE,CAAC,CAAC;EACF,OAAO+D,MAAM;AACf;AAbApB,OAAA,CAAAd,6BAAA,GAAAA,6BAAA;AAeA,SAAgB0D,uBAAuBA,CACrC1B,KAAwB,EACxB7D,WAA6B;EAE7B,OAAO;IACLD,IAAI,EAAEC,WAAW,CAAC6D,KAAK,CAAC9D,IAAI,CAAC;IAC7BuF,YAAY,EAAEzB,KAAK,CAACyB,YAAY;IAChC9E,WAAW,EAAEqD,KAAK,CAACrD,WAAW;IAC9BC,OAAO,EAAEoD,KAAK,CAACpD;GAChB;AACH;AAVAkC,OAAA,CAAA4C,uBAAA,GAAAA,uBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}