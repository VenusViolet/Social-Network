{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar graphql_1 = require(\"graphql\");\nvar resolveFromParentTypename_1 = require(\"./resolveFromParentTypename\");\nvar backcompatOptions = {\n  commentDescriptions: true\n};\nfunction typeFromAST(node) {\n  switch (node.kind) {\n    case graphql_1.Kind.OBJECT_TYPE_DEFINITION:\n      return makeObjectType(node);\n    case graphql_1.Kind.INTERFACE_TYPE_DEFINITION:\n      return makeInterfaceType(node);\n    case graphql_1.Kind.ENUM_TYPE_DEFINITION:\n      return makeEnumType(node);\n    case graphql_1.Kind.UNION_TYPE_DEFINITION:\n      return makeUnionType(node);\n    case graphql_1.Kind.SCALAR_TYPE_DEFINITION:\n      return makeScalarType(node);\n    case graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n      return makeInputObjectType(node);\n    case graphql_1.Kind.DIRECTIVE_DEFINITION:\n      return makeDirective(node);\n    default:\n      return null;\n  }\n}\nexports.default = typeFromAST;\nfunction makeObjectType(node) {\n  return new graphql_1.GraphQLObjectType({\n    name: node.name.value,\n    fields: function () {\n      return makeFields(node.fields);\n    },\n    interfaces: function () {\n      return node.interfaces.map(function (iface) {\n        return createNamedStub(iface.name.value, 'interface');\n      });\n    },\n    description: graphql_1.getDescription(node, backcompatOptions)\n  });\n}\nfunction makeInterfaceType(node) {\n  return new graphql_1.GraphQLInterfaceType({\n    name: node.name.value,\n    fields: function () {\n      return makeFields(node.fields);\n    },\n    description: graphql_1.getDescription(node, backcompatOptions),\n    resolveType: function (parent, context, info) {\n      return resolveFromParentTypename_1.default(parent, info.schema);\n    }\n  });\n}\nfunction makeEnumType(node) {\n  var values = {};\n  node.values.forEach(function (value) {\n    values[value.name.value] = {\n      description: graphql_1.getDescription(value, backcompatOptions)\n    };\n  });\n  return new graphql_1.GraphQLEnumType({\n    name: node.name.value,\n    values: values,\n    description: graphql_1.getDescription(node, backcompatOptions)\n  });\n}\nfunction makeUnionType(node) {\n  return new graphql_1.GraphQLUnionType({\n    name: node.name.value,\n    types: function () {\n      return node.types.map(function (type) {\n        return resolveType(type, 'object');\n      });\n    },\n    description: graphql_1.getDescription(node, backcompatOptions),\n    resolveType: function (parent, context, info) {\n      return resolveFromParentTypename_1.default(parent, info.schema);\n    }\n  });\n}\nfunction makeScalarType(node) {\n  return new graphql_1.GraphQLScalarType({\n    name: node.name.value,\n    description: graphql_1.getDescription(node, backcompatOptions),\n    serialize: function () {\n      return null;\n    },\n    // Note: validation calls the parse functions to determine if a\n    // literal value is correct. Returning null would cause use of custom\n    // scalars to always fail validation. Returning false causes them to\n    // always pass validation.\n    parseValue: function () {\n      return false;\n    },\n    parseLiteral: function () {\n      return false;\n    }\n  });\n}\nfunction makeInputObjectType(node) {\n  return new graphql_1.GraphQLInputObjectType({\n    name: node.name.value,\n    fields: function () {\n      return makeValues(node.fields);\n    },\n    description: graphql_1.getDescription(node, backcompatOptions)\n  });\n}\nfunction makeFields(nodes) {\n  var result = {};\n  nodes.forEach(function (node) {\n    var deprecatedDirective = node.directives.find(function (directive) {\n      return directive && directive.name && directive.name.value === 'deprecated';\n    });\n    var deprecatedArgument = deprecatedDirective && deprecatedDirective.arguments && deprecatedDirective.arguments.find(function (arg) {\n      return arg && arg.name && arg.name.value === 'reason';\n    });\n    var deprecationReason = deprecatedArgument && deprecatedArgument.value && deprecatedArgument.value.value;\n    result[node.name.value] = {\n      type: resolveType(node.type, 'object'),\n      args: makeValues(node.arguments),\n      description: graphql_1.getDescription(node, backcompatOptions),\n      deprecationReason: deprecationReason\n    };\n  });\n  return result;\n}\nfunction makeValues(nodes) {\n  var result = {};\n  nodes.forEach(function (node) {\n    var type = resolveType(node.type, 'input');\n    result[node.name.value] = {\n      type: type,\n      defaultValue: graphql_1.valueFromAST(node.defaultValue, type),\n      description: graphql_1.getDescription(node, backcompatOptions)\n    };\n  });\n  return result;\n}\nfunction resolveType(node, type) {\n  switch (node.kind) {\n    case graphql_1.Kind.LIST_TYPE:\n      return new graphql_1.GraphQLList(resolveType(node.type, type));\n    case graphql_1.Kind.NON_NULL_TYPE:\n      return new graphql_1.GraphQLNonNull(resolveType(node.type, type));\n    default:\n      return createNamedStub(node.name.value, type);\n  }\n}\nfunction createNamedStub(name, type) {\n  var constructor;\n  if (type === 'object') {\n    constructor = graphql_1.GraphQLObjectType;\n  } else if (type === 'interface') {\n    constructor = graphql_1.GraphQLInterfaceType;\n  } else {\n    constructor = graphql_1.GraphQLInputObjectType;\n  }\n  return new constructor({\n    name: name,\n    fields: {\n      __fake: {\n        type: graphql_1.GraphQLString\n      }\n    }\n  });\n}\nfunction makeDirective(node) {\n  var locations = [];\n  node.locations.forEach(function (location) {\n    if (location.value in graphql_1.DirectiveLocation) {\n      locations.push(location.value);\n    }\n  });\n  return new graphql_1.GraphQLDirective({\n    name: node.name.value,\n    description: node.description ? node.description.value : null,\n    args: makeValues(node.arguments),\n    locations: locations\n  });\n}","map":{"version":3,"names":["graphql_1","require","resolveFromParentTypename_1","backcompatOptions","commentDescriptions","typeFromAST","node","kind","Kind","OBJECT_TYPE_DEFINITION","makeObjectType","INTERFACE_TYPE_DEFINITION","makeInterfaceType","ENUM_TYPE_DEFINITION","makeEnumType","UNION_TYPE_DEFINITION","makeUnionType","SCALAR_TYPE_DEFINITION","makeScalarType","INPUT_OBJECT_TYPE_DEFINITION","makeInputObjectType","DIRECTIVE_DEFINITION","makeDirective","exports","default","GraphQLObjectType","name","value","fields","makeFields","interfaces","map","iface","createNamedStub","description","getDescription","GraphQLInterfaceType","resolveType","parent","context","info","schema","values","forEach","GraphQLEnumType","GraphQLUnionType","types","type","GraphQLScalarType","serialize","parseValue","parseLiteral","GraphQLInputObjectType","makeValues","nodes","result","deprecatedDirective","directives","find","directive","deprecatedArgument","arguments","arg","deprecationReason","args","defaultValue","valueFromAST","LIST_TYPE","GraphQLList","NON_NULL_TYPE","GraphQLNonNull","constructor","__fake","GraphQLString","locations","location","DirectiveLocation","push","GraphQLDirective"],"sources":["../../src/stitching/typeFromAST.ts"],"sourcesContent":[null],"mappings":";;;AAAA,IAAAA,SAAA,GAAAC,OAAA;AAiCA,IAAAC,2BAAA,GAAAD,OAAA;AAEA,IAAME,iBAAiB,GAAG;EAAEC,mBAAmB,EAAE;AAAI,CAAE;AAQvD,SAAwBC,WAAWA,CACjCC,IAAoB;EAEpB,QAAQA,IAAI,CAACC,IAAI;IACf,KAAKP,SAAA,CAAAQ,IAAI,CAACC,sBAAsB;MAC9B,OAAOC,cAAc,CAACJ,IAAI,CAAC;IAC7B,KAAKN,SAAA,CAAAQ,IAAI,CAACG,yBAAyB;MACjC,OAAOC,iBAAiB,CAACN,IAAI,CAAC;IAChC,KAAKN,SAAA,CAAAQ,IAAI,CAACK,oBAAoB;MAC5B,OAAOC,YAAY,CAACR,IAAI,CAAC;IAC3B,KAAKN,SAAA,CAAAQ,IAAI,CAACO,qBAAqB;MAC7B,OAAOC,aAAa,CAACV,IAAI,CAAC;IAC5B,KAAKN,SAAA,CAAAQ,IAAI,CAACS,sBAAsB;MAC9B,OAAOC,cAAc,CAACZ,IAAI,CAAC;IAC7B,KAAKN,SAAA,CAAAQ,IAAI,CAACW,4BAA4B;MACpC,OAAOC,mBAAmB,CAACd,IAAI,CAAC;IAClC,KAAKN,SAAA,CAAAQ,IAAI,CAACa,oBAAoB;MAC5B,OAAOC,aAAa,CAAChB,IAAI,CAAC;IAC5B;MACE,OAAO,IAAI;EAAC;AAElB;AArBAiB,OAAA,CAAAC,OAAA,GAAAnB,WAAA;AAuBA,SAASK,cAAcA,CACrBJ,IAA8B;EAE9B,OAAO,IAAIN,SAAA,CAAAyB,iBAAiB,CAAC;IAC3BC,IAAI,EAAEpB,IAAI,CAACoB,IAAI,CAACC,KAAK;IACrBC,MAAM,EAAE,SAAAA,CAAA;MAAM,OAAAC,UAAU,CAACvB,IAAI,CAACsB,MAAM,CAAC;IAAvB,CAAuB;IACrCE,UAAU,EAAE,SAAAA,CAAA;MACV,OAAAxB,IAAI,CAACwB,UAAU,CAACC,GAAG,CACjB,UAAAC,KAAK;QAAI,OAAAC,eAAe,CAACD,KAAK,CAACN,IAAI,CAACC,KAAK,EAAE,WAAW,CAAyB;MAAtE,CAAsE,CAChF;IAFD,CAEC;IACHO,WAAW,EAAElC,SAAA,CAAAmC,cAAc,CAAC7B,IAAI,EAAEH,iBAAiB;GACpD,CAAC;AACJ;AAEA,SAASS,iBAAiBA,CACxBN,IAAiC;EAEjC,OAAO,IAAIN,SAAA,CAAAoC,oBAAoB,CAAC;IAC9BV,IAAI,EAAEpB,IAAI,CAACoB,IAAI,CAACC,KAAK;IACrBC,MAAM,EAAE,SAAAA,CAAA;MAAM,OAAAC,UAAU,CAACvB,IAAI,CAACsB,MAAM,CAAC;IAAvB,CAAuB;IACrCM,WAAW,EAAElC,SAAA,CAAAmC,cAAc,CAAC7B,IAAI,EAAEH,iBAAiB,CAAC;IACpDkC,WAAW,EAAE,SAAAA,CAACC,MAAM,EAAEC,OAAO,EAAEC,IAAI;MACjC,OAAAtC,2BAAA,CAAAsB,OAAqB,CAACc,MAAM,EAAEE,IAAI,CAACC,MAAM,CAAC;IAA1C;GACH,CAAC;AACJ;AAEA,SAAS3B,YAAYA,CACnBR,IAA4B;EAE5B,IAAMoC,MAAM,GAAG,EAAE;EACjBpC,IAAI,CAACoC,MAAM,CAACC,OAAO,CAAC,UAAAhB,KAAK;IACvBe,MAAM,CAACf,KAAK,CAACD,IAAI,CAACC,KAAK,CAAC,GAAG;MACzBO,WAAW,EAAElC,SAAA,CAAAmC,cAAc,CAACR,KAAK,EAAExB,iBAAiB;KACrD;EACH,CAAC,CAAC;EACF,OAAO,IAAIH,SAAA,CAAA4C,eAAe,CAAC;IACzBlB,IAAI,EAAEpB,IAAI,CAACoB,IAAI,CAACC,KAAK;IACrBe,MAAM,EAAAA,MAAA;IACNR,WAAW,EAAElC,SAAA,CAAAmC,cAAc,CAAC7B,IAAI,EAAEH,iBAAiB;GACpD,CAAC;AACJ;AAEA,SAASa,aAAaA,CACpBV,IAA6B;EAE7B,OAAO,IAAIN,SAAA,CAAA6C,gBAAgB,CAAC;IAC1BnB,IAAI,EAAEpB,IAAI,CAACoB,IAAI,CAACC,KAAK;IACrBmB,KAAK,EAAE,SAAAA,CAAA;MACL,OAAAxC,IAAI,CAACwC,KAAK,CAACf,GAAG,CACZ,UAAAgB,IAAI;QAAI,OAAAV,WAAW,CAACU,IAAI,EAAE,QAAQ,CAAsB;MAAhD,CAAgD,CACzD;IAFD,CAEC;IACHb,WAAW,EAAElC,SAAA,CAAAmC,cAAc,CAAC7B,IAAI,EAAEH,iBAAiB,CAAC;IACpDkC,WAAW,EAAE,SAAAA,CAACC,MAAM,EAAEC,OAAO,EAAEC,IAAI;MACjC,OAAAtC,2BAAA,CAAAsB,OAAqB,CAACc,MAAM,EAAEE,IAAI,CAACC,MAAM,CAAC;IAA1C;GACH,CAAC;AACJ;AAEA,SAASvB,cAAcA,CACrBZ,IAA8B;EAE9B,OAAO,IAAIN,SAAA,CAAAgD,iBAAiB,CAAC;IAC3BtB,IAAI,EAAEpB,IAAI,CAACoB,IAAI,CAACC,KAAK;IACrBO,WAAW,EAAElC,SAAA,CAAAmC,cAAc,CAAC7B,IAAI,EAAEH,iBAAiB,CAAC;IACpD8C,SAAS,EAAE,SAAAA,CAAA;MAAM,WAAI;IAAJ,CAAI;IACrB;IACA;IACA;IACA;IACAC,UAAU,EAAE,SAAAA,CAAA;MAAM,YAAK;IAAL,CAAK;IACvBC,YAAY,EAAE,SAAAA,CAAA;MAAM,YAAK;IAAL;GACrB,CAAC;AACJ;AAEA,SAAS/B,mBAAmBA,CAC1Bd,IAAmC;EAEnC,OAAO,IAAIN,SAAA,CAAAoD,sBAAsB,CAAC;IAChC1B,IAAI,EAAEpB,IAAI,CAACoB,IAAI,CAACC,KAAK;IACrBC,MAAM,EAAE,SAAAA,CAAA;MAAM,OAAAyB,UAAU,CAAC/C,IAAI,CAACsB,MAAM,CAAC;IAAvB,CAAuB;IACrCM,WAAW,EAAElC,SAAA,CAAAmC,cAAc,CAAC7B,IAAI,EAAEH,iBAAiB;GACpD,CAAC;AACJ;AAEA,SAAS0B,UAAUA,CACjByB,KAAyC;EAEzC,IAAMC,MAAM,GAAiD,EAAE;EAC/DD,KAAK,CAACX,OAAO,CAAC,UAACrC,IAAI;IACjB,IAAMkD,mBAAmB,GAAGlD,IAAI,CAACmD,UAAU,CAACC,IAAI,CAC9C,UAACC,SAAS;MACR,OAAAA,SAAS,IAAIA,SAAS,CAACjC,IAAI,IAAIiC,SAAS,CAACjC,IAAI,CAACC,KAAK,KAAK,YAAY;IAApE,CAAoE,CACvE;IACD,IAAMiC,kBAAkB,GACtBJ,mBAAmB,IACnBA,mBAAmB,CAACK,SAAS,IAC7BL,mBAAmB,CAACK,SAAS,CAACH,IAAI,CAChC,UAACI,GAAG;MAAK,OAAAA,GAAG,IAAIA,GAAG,CAACpC,IAAI,IAAIoC,GAAG,CAACpC,IAAI,CAACC,KAAK,KAAK,QAAQ;IAA9C,CAA8C,CACxD;IACH,IAAMoC,iBAAiB,GACrBH,kBAAkB,IAClBA,kBAAkB,CAACjC,KAAK,IACvBiC,kBAAkB,CAACjC,KAAyB,CAACA,KAAK;IAErD4B,MAAM,CAACjD,IAAI,CAACoB,IAAI,CAACC,KAAK,CAAC,GAAG;MACxBoB,IAAI,EAAEV,WAAW,CAAC/B,IAAI,CAACyC,IAAI,EAAE,QAAQ,CAAsB;MAC3DiB,IAAI,EAAEX,UAAU,CAAC/C,IAAI,CAACuD,SAAS,CAAC;MAChC3B,WAAW,EAAElC,SAAA,CAAAmC,cAAc,CAAC7B,IAAI,EAAEH,iBAAiB,CAAC;MACpD4D,iBAAiB,EAAAA;KAClB;EACH,CAAC,CAAC;EACF,OAAOR,MAAM;AACf;AAEA,SAASF,UAAUA,CAACC,KAA8C;EAChE,IAAMC,MAAM,GAAG,EAAE;EACjBD,KAAK,CAACX,OAAO,CAAC,UAAArC,IAAI;IAChB,IAAMyC,IAAI,GAAGV,WAAW,CAAC/B,IAAI,CAACyC,IAAI,EAAE,OAAO,CAAqB;IAChEQ,MAAM,CAACjD,IAAI,CAACoB,IAAI,CAACC,KAAK,CAAC,GAAG;MACxBoB,IAAI,EAAAA,IAAA;MACJkB,YAAY,EAAEjE,SAAA,CAAAkE,YAAY,CAAC5D,IAAI,CAAC2D,YAAY,EAAElB,IAAI,CAAC;MACnDb,WAAW,EAAElC,SAAA,CAAAmC,cAAc,CAAC7B,IAAI,EAAEH,iBAAiB;KACpD;EACH,CAAC,CAAC;EACF,OAAOoD,MAAM;AACf;AAEA,SAASlB,WAAWA,CAClB/B,IAAc,EACdyC,IAAsC;EAEtC,QAAQzC,IAAI,CAACC,IAAI;IACf,KAAKP,SAAA,CAAAQ,IAAI,CAAC2D,SAAS;MACjB,OAAO,IAAInE,SAAA,CAAAoE,WAAW,CAAC/B,WAAW,CAAC/B,IAAI,CAACyC,IAAI,EAAEA,IAAI,CAAC,CAAC;IACtD,KAAK/C,SAAA,CAAAQ,IAAI,CAAC6D,aAAa;MACrB,OAAO,IAAIrE,SAAA,CAAAsE,cAAc,CAACjC,WAAW,CAAC/B,IAAI,CAACyC,IAAI,EAAEA,IAAI,CAAC,CAAC;IACzD;MACE,OAAOd,eAAe,CAAC3B,IAAI,CAACoB,IAAI,CAACC,KAAK,EAAEoB,IAAI,CAAC;EAAC;AAEpD;AAEA,SAASd,eAAeA,CACtBP,IAAY,EACZqB,IAAsC;EAEtC,IAAIwB,WAAgB;EACpB,IAAIxB,IAAI,KAAK,QAAQ,EAAE;IACrBwB,WAAW,GAAGvE,SAAA,CAAAyB,iBAAiB;GAChC,MAAM,IAAIsB,IAAI,KAAK,WAAW,EAAE;IAC/BwB,WAAW,GAAGvE,SAAA,CAAAoC,oBAAoB;GACnC,MAAM;IACLmC,WAAW,GAAGvE,SAAA,CAAAoD,sBAAsB;;EAGtC,OAAO,IAAImB,WAAW,CAAC;IACrB7C,IAAI,EAAAA,IAAA;IACJE,MAAM,EAAE;MACN4C,MAAM,EAAE;QACNzB,IAAI,EAAE/C,SAAA,CAAAyE;;;GAGX,CAAC;AACJ;AAEA,SAASnD,aAAaA,CAAChB,IAA6B;EAClD,IAAMoE,SAAS,GAAiC,EAAE;EAClDpE,IAAI,CAACoE,SAAS,CAAC/B,OAAO,CAAC,UAAAgC,QAAQ;IAC7B,IAA2BA,QAAQ,CAAChD,KAAK,IAAI3B,SAAA,CAAA4E,iBAAiB,EAAE;MAC9DF,SAAS,CAACG,IAAI,CAAwBF,QAAQ,CAAChD,KAAK,CAAC;;EAEzD,CAAC,CAAC;EACF,OAAO,IAAI3B,SAAA,CAAA8E,gBAAgB,CAAC;IAC1BpD,IAAI,EAAEpB,IAAI,CAACoB,IAAI,CAACC,KAAK;IACrBO,WAAW,EAAE5B,IAAI,CAAC4B,WAAW,GAAG5B,IAAI,CAAC4B,WAAW,CAACP,KAAK,GAAG,IAAI;IAC7DqC,IAAI,EAAEX,UAAU,CAAC/C,IAAI,CAACuD,SAAS,CAAC;IAChCa,SAAS,EAAAA;GACV,CAAC;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}